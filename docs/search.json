[{"path":"http://yongfu.name/stom/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yongfu Liao. Author, maintainer.","code":""},{"path":"http://yongfu.name/stom/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liao Y (2023). stom: Miscellaneous Functions Statistical Modeling. http://yongfu.name/stom, https://github.com/liao961120/stom.","code":"@Manual{,   title = {stom: Miscellaneous Functions for Statistical Modeling},   author = {Yongfu Liao},   year = {2023},   note = {http://yongfu.name/stom, https://github.com/liao961120/stom}, }"},{"path":"http://yongfu.name/stom/index.html","id":"miscellaneous-functions-for-statistical-modeling","dir":"","previous_headings":"","what":"Miscellaneous Functions for Statistical Modeling","title":"Miscellaneous Functions for Statistical Modeling","text":"slowly moving package. Interesting things might found inst/. Otherwise, ’s just log personal scripts functions.","code":""},{"path":"http://yongfu.name/stom/reference/col.alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"RGB to RGBA — col.alpha","title":"RGB to RGBA — col.alpha","text":"Stolen rethinking::col.alpha().","code":""},{"path":"http://yongfu.name/stom/reference/col.alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RGB to RGBA — col.alpha","text":"","code":"col.alpha(acol, alpha = 0.5)"},{"path":"http://yongfu.name/stom/reference/export_docs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract docstring from R script to various output formats — export_docs","title":"Extract docstring from R script to various output formats — export_docs","text":"docstring defined lines start #'. avoid problems converting .pdf .html, format documentation comply Pandoc's markdown syntax. allow execution  export_docs_html() export_docs_pdf(), pandoc needs available command line. addition, LaTeX distribution (e.g. TeXLive) also required PDF compilation.","code":""},{"path":"http://yongfu.name/stom/reference/export_docs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract docstring from R script to various output formats — export_docs","text":"","code":"export_docs(path, outfp = NULL)  export_docs_pdf(path, outfp, style = \"amsart\")  export_docs_html(path, outfp)"},{"path":"http://yongfu.name/stom/reference/export_docs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract docstring from R script to various output formats — export_docs","text":"path Path input R script. outfp Output file path write . style String. Predefined style apply PDF outputs. Currently, amsart available.","code":""},{"path":"http://yongfu.name/stom/reference/export_docs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract docstring from R script to various output formats — export_docs","text":"","code":"(fin = system.file(\"wineNetwork\", \"wine.R\", package = \"stom\")) #> [1] \"/tmp/RtmpUWaKTy/temp_libpath478466443a0e/stom/wineNetwork/wine.R\" docstring = export_docs(fin)  # Return as character vector if `outfp=NULL` cat(docstring, sep=\"\\n\") #> --- #> title: Joint Estimation of Interaction and Piped Effects in an Item Response Model #> author: \"Yongfu Liao\" #> --- #>  #> Description #> ----------- #>  #> The Directed Acyclic Graph (DAG) shown below represent the data generating #> process of the IRT model of interest. It can be conceptualized as a wine #> rating context, where the rating of wine quality ($R$) is influenced by #> three factors: #>  #> 1. $J$: Judge leniency #> 2. $W$: Wine quality #> 3. $O_w$: Wine origin #>  #> Furthermore, it is assumed that $O_w$ differentially influences $R$ #> based on the levels of another variable $O_j$, the origin of the judge #> In stats jargon, there's an interaction between $O_w$ and $O_j$. In simpler #> conceptual terms, consider the scenario that, for instance, French wines are #> rated higher by French judges, in addition to the scores they should have #> received based on their quality alone. The simulation code of this data #> generating process is found in the `sim_dat()` function below. #>  #> ```{.goat} #>         R <--- Ow #>        ^ ^     ^   #>       /   \\   /    #>      /     \\ /      #>     J       W  #> ``` #>  #> The Original Model and its Problem #> ---------------------------------- #>  #> The specification of the original model is shown in the equations below. #> A problem found in this model is that it cannot stably recover the wine #> quality (`W`) and the interaction (`Int`) parameters. #>  #> $$ #> \\begin{aligned} #> R & \\sim Bernoulli( p )  \\\\ #> logit(p) &= W_{[Wid]} + J_{[Jid]} + Int_{[O_j, O_w]} \\\\ #> J & \\sim Normal( 0, \\sigma_J )  \\\\ #> \\sigma_J & \\sim Exponential(1) \\\\ #> \\\\ #> W_{[Wid]} & \\sim Normal( a_{[O_w]}, \\sigma_W )  \\\\ #> a & \\sim Normal( 0, 1.5 )  \\\\ #> \\sigma_W & \\sim Exponential(1) #> \\end{aligned} #> $$ #>  #>  #> Potential Causes #> ---------------- #>  #> With some exploration on a simpler model (the response was modeled as normal #> distributions generated from latent scores), it was found that the problem #> seemed to arise from an identifiablity issue: the model cannot correctly #> attribute the right amount of effect to wine quality (which is influenced by #> wine origin) and the direct (interactive) influence of wine origin on rating #> scores. The parameter estimates float around case by case when different #> configurations of the interaction are set in the simulation. #>  #>  #> Fixes #> ----- #>  #> As illustrated in `wine2_normal.stan` (Case 4 & 5), the problem can be fixed #> by imposing additional constraints on the model. Two of them are imposed #> here to correctly identify the parameters: #>  #> 1. A sum-to-zero constraint on the effects of wine origin on wine quality. #>    That is, the effect through the path $O_w \\rightarrow W$. #> 2. One of a term in the interaction matrix (`(2, 2)` in the case here) is #>    constraint to zero as the reference. #>  #>  #> ToDo #> ---- #>  #> Test whether the conclusion also holds with logit models (binary/ordinal #> response models). if (FALSE) { export_docs(fin, \"docs.md\") export_docs_pdf(fin, \"docs.pdf\") export_docs_html(fin, \"docs.html\") }"},{"path":"http://yongfu.name/stom/reference/logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Links and Inverse Links for Logistic Regression — logit","title":"Links and Inverse Links for Logistic Regression — logit","text":"Links Inverse Links Logistic Regression","code":""},{"path":"http://yongfu.name/stom/reference/logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Links and Inverse Links for Logistic Regression — logit","text":"","code":"logit(p)  inv_logit(x)  logistic(x)"},{"path":"http://yongfu.name/stom/reference/logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Links and Inverse Links for Logistic Regression — logit","text":"p Numeric vector. Values probability scale. x Numeric vector. Values linear scale.","code":""},{"path":"http://yongfu.name/stom/reference/pandoc_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Pandoc wrappers for converting markdown to pre-styled documents — pandoc_pdf","title":"Pandoc wrappers for converting markdown to pre-styled documents — pandoc_pdf","text":"Pandoc wrappers converting markdown pre-styled documents","code":""},{"path":"http://yongfu.name/stom/reference/pandoc_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pandoc wrappers for converting markdown to pre-styled documents — pandoc_pdf","text":"","code":"pandoc_pdf(fin, outfp, style = \"amsart\")  pandoc_html(fin, outfp, style = NULL)"},{"path":"http://yongfu.name/stom/reference/rbern.html","id":null,"dir":"Reference","previous_headings":"","what":"Bernoulli Random Number Generator — rbern","title":"Bernoulli Random Number Generator — rbern","text":"Alias rbinom() single trial (size = 1).","code":""},{"path":"http://yongfu.name/stom/reference/rbern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bernoulli Random Number Generator — rbern","text":"","code":"rbern(prob, n = length(prob))"},{"path":"http://yongfu.name/stom/reference/rbern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bernoulli Random Number Generator — rbern","text":"prob Vector probabilities. n Numbers sample, defaults length prob.","code":""},{"path":"http://yongfu.name/stom/reference/rordlogit.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Number Generator for ordered categories — rordlogit","title":"Random Number Generator for ordered categories — rordlogit","text":"Random Number Generator ordered categories","code":""},{"path":"http://yongfu.name/stom/reference/rordlogit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Number Generator for ordered categories — rordlogit","text":"","code":"rordlogit(phi, cutpoints)"},{"path":"http://yongfu.name/stom/reference/rordlogit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Number Generator for ordered categories — rordlogit","text":"phi Numeric. linear term(s) subtract ordered categories. cutpoints vector cutpoints delineating ordered categories logit scale. generating n categories, n-1 cutpoints needed. include (negative) Inf values.","code":""},{"path":"http://yongfu.name/stom/reference/rordlogit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Number Generator for ordered categories — rordlogit","text":"","code":"cutpoints = c( -1.5, 0, 1.5 ) rordlogit( phi=0, cutpoints=cutpoints ) #> [1] 2 x = replicate( 1e5, {rordlogit(0, cutpoints)}) table(x) / length(x) #> x #>       1       2       3       4  #> 0.18591 0.31439 0.31889 0.18081  logistic( c(cutpoints, Inf) ) - logistic( c(-Inf, cutpoints) ) #> [1] 0.1824255 0.3175745 0.3175745 0.1824255"},{"path":"http://yongfu.name/stom/reference/rtnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Number Generator for Truncated Normal Distribution — rtnorm","title":"Random Number Generator for Truncated Normal Distribution — rtnorm","text":"parameters set generate numbers half-normal distribution default.","code":""},{"path":"http://yongfu.name/stom/reference/rtnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Number Generator for Truncated Normal Distribution — rtnorm","text":"","code":"rtnorm(n, m = 0, s = 1, lower = 0, upper = Inf)"},{"path":"http://yongfu.name/stom/reference/rtnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Number Generator for Truncated Normal Distribution — rtnorm","text":"n Numbers sample. m mean untruncated normal distribution. s standard deviation untruncated normal distribution. lower lower bound truncation. upper upper bound truncation.","code":""},{"path":"http://yongfu.name/stom/reference/standardize.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize a vector to fixed mean and std — standardize","title":"Standardize a vector to fixed mean and std — standardize","text":"Standardize vector fixed mean std","code":""},{"path":"http://yongfu.name/stom/reference/standardize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize a vector to fixed mean and std — standardize","text":"","code":"standardize(x, m = 0, s = 1)"},{"path":"http://yongfu.name/stom/reference/standardize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize a vector to fixed mean and std — standardize","text":"x Numeric vector. m Mean. s Standard deviation.","code":""}]
