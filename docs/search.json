[{"path":"http://yongfu.name/stom/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yongfu Liao. Author, maintainer.","code":""},{"path":"http://yongfu.name/stom/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liao Y (2023). stom: Miscellaneous Functions Statistical Modeling. http://yongfu.name/stom, https://github.com/liao961120/stom.","code":"@Manual{,   title = {stom: Miscellaneous Functions for Statistical Modeling},   author = {Yongfu Liao},   year = {2023},   note = {http://yongfu.name/stom, https://github.com/liao961120/stom}, }"},{"path":"http://yongfu.name/stom/index.html","id":"miscellaneous-functions-for-statistical-modeling","dir":"","previous_headings":"","what":"Miscellaneous Functions for Statistical Modeling","title":"Miscellaneous Functions for Statistical Modeling","text":"slow moving package. Interesting model-fitting scripts might found inst/cases. Otherwise, ’s just log personal scripts functions.","code":""},{"path":"http://yongfu.name/stom/reference/as_c_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector object as R input string — as_c_num","title":"Vector object as R input string — as_c_num","text":"Vector object R input string","code":""},{"path":"http://yongfu.name/stom/reference/as_c_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector object as R input string — as_c_num","text":"","code":"as_c_num(x)  as_c_chr(x)"},{"path":"http://yongfu.name/stom/reference/as_c_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector object as R input string — as_c_num","text":"","code":"as_c_num(1:3) #> c(1, 2, 3)  as_c_chr(1:3) #> c('1', '2', '3')"},{"path":"http://yongfu.name/stom/reference/as_posterior_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert posterior data frame to a list of array — as_posterior_array","title":"Convert posterior data frame to a list of array — as_posterior_array","text":"Convert posterior data frame list array","code":""},{"path":"http://yongfu.name/stom/reference/as_posterior_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert posterior data frame to a list of array — as_posterior_array","text":"","code":"as_posterior_array(d, param = NULL, sample_n = NULL)"},{"path":"http://yongfu.name/stom/reference/as_posterior_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert posterior data frame to a list of array — as_posterior_array","text":"d Data frame. Posterior samples returned stom::extract() stom::get_pars(). param String. Name parameter extract (without brackets). default, NULL, assumes input data frame d contains columns parameter interest. sample Integer. Number samples draw posterior samples. NULL, returns full data frame posterior samples.","code":""},{"path":"http://yongfu.name/stom/reference/as_posterior_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert posterior data frame to a list of array — as_posterior_array","text":"list arrays, array corresponding draw posterior samples (.e. row posterior data frame).","code":""},{"path":"http://yongfu.name/stom/reference/as_posterior_array.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert posterior data frame to a list of array — as_posterior_array","text":"","code":"fp = system.file(\"cases\", \"wine_network\", \"wine2_normal_first_level2.RDS\", package=\"stom\") m = readRDS(fp) post = extract(m) as_posterior_array( post, param=\"Int\", sample_n=5 ) #> Warning: Dropping 'draws_df' class as required metadata was removed. #> [[1]] #>         [,1]      [,2] #> [1,] 1.73259 -0.396966 #> [2,] 1.71684  0.000000 #>  #> [[2]] #>          [,1]      [,2] #> [1,] 0.769596 -0.392498 #> [2,] 1.024360  0.000000 #>  #> [[3]] #>         [,1]       [,2] #> [1,] 1.70092 -0.0567191 #> [2,] 1.99134  0.0000000 #>  #> [[4]] #>          [,1]      [,2] #> [1,] 0.791721 -0.523516 #> [2,] 1.250150  0.000000 #>  #> [[5]] #>         [,1]      [,2] #> [1,] 1.69852 -0.390534 #> [2,] 2.10001  0.000000 #>"},{"path":"http://yongfu.name/stom/reference/bin_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns binary extension depending on OS — bin_ext","title":"Returns binary extension depending on OS — bin_ext","text":"Returns binary extension depending OS","code":""},{"path":"http://yongfu.name/stom/reference/bin_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns binary extension depending on OS — bin_ext","text":"","code":"bin_ext()"},{"path":"http://yongfu.name/stom/reference/cmd_get_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Primitive parsing of command line arguments — cmd_get_value","title":"Primitive parsing of command line arguments — cmd_get_value","text":"Primitive parsing command line arguments","code":""},{"path":"http://yongfu.name/stom/reference/cmd_get_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Primitive parsing of command line arguments — cmd_get_value","text":"","code":"cmd_get_value(args, pre)  cmd_has(args, has)  cmd_parse_date(args, pre = \"--date=\")"},{"path":"http://yongfu.name/stom/reference/cmd_get_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Primitive parsing of command line arguments — cmd_get_value","text":"args Character vector. Returned base::commandArgs(TRUE). pre String. Command line prefix retrieve value . Character vector. Arguments checked presence command line arguments.","code":""},{"path":"http://yongfu.name/stom/reference/cmd_get_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Primitive parsing of command line arguments — cmd_get_value","text":"","code":"args = c( \"--date=2022-11-20\", \"--second\" ) cmd_get_value(args, \"--date=\") #> [1] \"2022-11-20\" cmd_parse_date(args) #> [1] \"2022-11-20\" cmd_has(args, \"--second\") #> [1] TRUE"},{"path":"http://yongfu.name/stom/reference/cmd_parse_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Full parsing of command line arguments — cmd_parse_args","title":"Full parsing of command line arguments — cmd_parse_args","text":"Full parsing command line arguments","code":""},{"path":"http://yongfu.name/stom/reference/cmd_parse_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full parsing of command line arguments — cmd_parse_args","text":"","code":"cmd_parse_args(x)  cmd_parse_key_val(x)"},{"path":"http://yongfu.name/stom/reference/cmd_parse_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full parsing of command line arguments — cmd_parse_args","text":"x vector command line arguments.","code":""},{"path":"http://yongfu.name/stom/reference/cmd_parse_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full parsing of command line arguments — cmd_parse_args","text":"list parsed arguments","code":""},{"path":"http://yongfu.name/stom/reference/cmd_parse_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Full parsing of command line arguments — cmd_parse_args","text":"","code":"x = c(\"--date=2021\", \"--hi-w=y\", \"--hi_w=y\", \"./file-info.txt\", \"--hi\") cmd_parse_args(x) #> $args #> [1] \"./file-info.txt\" #>  #> $named #>   date   hi-w   hi_w  #> \"2021\"    \"y\"    \"y\"  #>  #> $opts #> [1] \"--hi\" #>"},{"path":"http://yongfu.name/stom/reference/col.alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"RGB to RGBA — col.alpha","title":"RGB to RGBA — col.alpha","text":"Stolen rethinking::col.alpha().","code":""},{"path":"http://yongfu.name/stom/reference/col.alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RGB to RGBA — col.alpha","text":"","code":"col.alpha(acol, alpha = 0.5)"},{"path":"http://yongfu.name/stom/reference/export_docs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract docstring from R script to various output formats — export_docs","title":"Extract docstring from R script to various output formats — export_docs","text":"docstring defined lines start #'. avoid problems converting .pdf .html, format documentation comply Pandoc's markdown syntax. allow execution  export_docs_html() export_docs_pdf(), pandoc needs available command line. addition, LaTeX distribution (e.g. TeXLive) also required PDF compilation.","code":""},{"path":"http://yongfu.name/stom/reference/export_docs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract docstring from R script to various output formats — export_docs","text":"","code":"export_docs(path, outfp = NULL)  export_docs_pdf(path, outfp, style = \"amsart\")  export_docs_html(path, outfp)"},{"path":"http://yongfu.name/stom/reference/export_docs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract docstring from R script to various output formats — export_docs","text":"path Path input R script. outfp Output file path write . style String. Predefined style apply PDF outputs. Currently, amsart available.","code":""},{"path":"http://yongfu.name/stom/reference/export_docs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract docstring from R script to various output formats — export_docs","text":"","code":"(fin = system.file(\"cases\", \"wine_network\", \"wine.R\", package = \"stom\")) #> [1] \"C:/Users/rd/AppData/Local/Temp/Rtmpuuox6g/temp_libpath610c379f742a/stom/cases/wine_network/wine.R\" docstring = export_docs(fin)  # Return as character vector if `outfp=NULL` cat(docstring, sep=\"\\n\") #> --- #> title: Joint Estimation of Interaction and Piped Effects in an Item Response Model #> author: \"Yongfu Liao\" #> --- #>  #> Description #> ----------- #>  #> The Directed Acyclic Graph (DAG) shown below represent the data generating #> process of the IRT model of interest. It can be conceptualized as a wine #> rating context, where the rating of wine quality ($R$) is influenced by #> three factors: #>  #> 1. $J$: Judge leniency #> 2. $W$: Wine quality #> 3. $O_w$: Wine origin #>  #> Furthermore, it is assumed that $O_w$ differentially influences $R$ #> based on the levels of another variable $O_j$, the origin of the judge #> In stats jargon, there's an interaction between $O_w$ and $O_j$. In simpler #> conceptual terms, consider the scenario that, for instance, French wines are #> rated higher by French judges, in addition to the scores they should have #> received based on their quality alone. The simulation code of this data #> generating process is found in the `sim_dat()` function below. #>  #> ![Underlying data-generating process of the IRT Model](dag) #>  #> The Original Model and its Problem #> ---------------------------------- #>  #> The specification of the original model is shown in the equations below. #> A problem found in this model is that it cannot stably recover the wine #> quality (`W`) and the interaction (`Int`) parameters. #>  #> $$ #> \\begin{aligned} #> R & \\sim Bernoulli( p )  \\\\ #> logit(p) &= W_{[Wid]} + J_{[Jid]} + Int_{[O_j, O_w]} \\\\ #> J & \\sim Normal( 0, \\sigma_J )  \\\\ #> \\sigma_J & \\sim Exponential(1) \\\\ #> \\\\ #> W_{[Wid]} & \\sim Normal( a_{[O_w]}, \\sigma_W )  \\\\ #> a & \\sim Normal( 0, 1.5 )  \\\\ #> \\sigma_W & \\sim Exponential(1) #> \\end{aligned} #> $$ #>  #>  #> Potential Causes #> ---------------- #>  #> With some exploration on a simpler model (the response was modeled as normal #> distributions generated from latent scores), it was found that the problem #> seemed to arise from an identifiablity issue: the model cannot correctly #> attribute the right amount of effect to wine quality (which is influenced by #> wine origin) and the direct (interactive) influence of wine origin on rating #> scores. The parameter estimates float around case by case when different #> configurations of the interaction are set in the simulation. #>  #>  #> Fixes #> ----- #>  #> As illustrated in `wine2_normal.stan` (Case 4 & 5), the problem can be fixed #> by imposing additional constraints on the model. Two of them are imposed #> here to correctly identify the parameters: #>  #> 1. A sum-to-zero constraint on the effects of wine origin on wine quality. #>    That is, the effect through the path $O_w \\rightarrow W$. #> 2. One of a term in the interaction matrix (`(2, 2)` in the case here) is #>    constraint to zero as the reference. #>  #>  #> ToDo #> ---- #>  #> Test whether the conclusion also holds with logit models (binary/ordinal #> response models). if (FALSE) { export_docs(fin, \"docs.md\") export_docs_pdf(fin, \"docs.pdf\") export_docs_html(fin, \"docs.html\") }"},{"path":"http://yongfu.name/stom/reference/get_cli_programs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get stom cmd programs — get_cli_programs","title":"Get stom cmd programs — get_cli_programs","text":"Get stom cmd programs","code":""},{"path":"http://yongfu.name/stom/reference/get_cli_programs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get stom cmd programs — get_cli_programs","text":"","code":"get_cli_programs(git_bash_path = T)"},{"path":"http://yongfu.name/stom/reference/get_cli_programs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get stom cmd programs — get_cli_programs","text":"","code":"get_cli_programs() #> [1] \"/C/Users/rd/AppData/Local/Temp/Rtmpuuox6g/temp_libpath610c379f742a/stom/cli/export_docs_pdf.R\" #> [2] \"/C/Users/rd/AppData/Local/Temp/Rtmpuuox6g/temp_libpath610c379f742a/stom/cli/pandoc_pdf.R\"      #> [3] \"/C/Users/rd/AppData/Local/Temp/Rtmpuuox6g/temp_libpath610c379f742a/stom/cli/pdf2img.R\""},{"path":"http://yongfu.name/stom/reference/get_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Select/Filter parameters from precis/extract data frames — get_pars","title":"Select/Filter parameters from precis/extract data frames — get_pars","text":"Select/Filter parameters precis/extract data frames","code":""},{"path":"http://yongfu.name/stom/reference/get_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select/Filter parameters from precis/extract data frames — get_pars","text":"","code":"get_pars(d, pars)"},{"path":"http://yongfu.name/stom/reference/get_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select/Filter parameters from precis/extract data frames — get_pars","text":"d data frame. data frame returned stom::precis() stom::extract(). pars Character vector parameter names retrieve.","code":""},{"path":"http://yongfu.name/stom/reference/get_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select/Filter parameters from precis/extract data frames — get_pars","text":"subset data frame given parameters.","code":""},{"path":"http://yongfu.name/stom/reference/get_pars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select/Filter parameters from precis/extract data frames — get_pars","text":"","code":"fp = system.file(\"cases\", \"wine_network\", \"wine2_normal_first_level2.RDS\", package=\"stom\") m = readRDS(fp) d = precis( m, depth=3 ) get_pars( d, c(\"Int\", \"Int_raw\") ) #> Warning: the condition has length > 1 and only the first element will be used #>      variable       mean        sd         q5       q95     rhat ess_bulk #> 41   Int[1,1]  1.4606586 0.4155012  0.7738191 2.1368475 1.005829 596.2273 #> 42   Int[2,1]  1.6077615 0.3527793  1.0167770 2.1725515 1.004828 638.9929 #> 43   Int[1,2] -0.2932317 0.4002178 -0.9390186 0.3660294 1.007534 626.0339 #> 44   Int[2,2]  0.0000000 0.0000000  0.0000000 0.0000000       NA       NA #> 45 Int_raw[1]  1.4606586 0.4155012  0.7738191 2.1368475 1.005829 596.2273 #> 46 Int_raw[2] -0.2932317 0.4002178 -0.9390186 0.3660294 1.007534 626.0339 #> 47 Int_raw[3]  1.6077615 0.3527793  1.0167770 2.1725515 1.004828 638.9929  d = extract( m ) get_pars( d, \"Int, Int_raw\" ) #> Warning: the condition has length > 1 and only the first element will be used #> Warning: Dropping 'draws_df' class as required metadata was removed. #> # A tibble: 4,000 x 7 #>    `Int[1,1]` `Int[2,1]` `Int[1,2]` `Int[2,2]` `Int_raw[1]` `Int_raw[2]` #>         <dbl>      <dbl>      <dbl>      <dbl>        <dbl>        <dbl> #>  1       1.59       1.83    -0.237           0         1.59      -0.237  #>  2       1.40       1.74    -0.600           0         1.40      -0.600  #>  3       1.85       1.89    -0.0834          0         1.85      -0.0834 #>  4       1.65       2.05    -0.370           0         1.65      -0.370  #>  5       1.58       1.75    -0.271           0         1.58      -0.271  #>  6       1.72       2.02    -0.146           0         1.72      -0.146  #>  7       1.78       1.85    -0.224           0         1.78      -0.224  #>  8       1.65       1.68    -0.0572          0         1.65      -0.0572 #>  9       1.60       1.85    -0.620           0         1.60      -0.620  #> 10       1.26       1.62    -0.644           0         1.26      -0.644  #> # i 3,990 more rows #> # i 1 more variable: `Int_raw[3]` <dbl>"},{"path":"http://yongfu.name/stom/reference/ignore_dollars_with_begin_equation.html","id":null,"dir":"Reference","previous_headings":"","what":"Spcial function to deal with conflicts between $$ and equation env in latex — ignore_dollars_with_begin_equation","title":"Spcial function to deal with conflicts between $$ and equation env in latex — ignore_dollars_with_begin_equation","text":"Spcial function deal conflicts $$ equation env latex","code":""},{"path":"http://yongfu.name/stom/reference/ignore_dollars_with_begin_equation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spcial function to deal with conflicts between $$ and equation env in latex — ignore_dollars_with_begin_equation","text":"","code":"ignore_dollars_with_begin_equation(lines)"},{"path":"http://yongfu.name/stom/reference/inkscape_pdf_pager.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct output file paths based on input PDF page numbers — inkscape_pdf_pager","title":"Construct output file paths based on input PDF page numbers — inkscape_pdf_pager","text":"Construct output file paths based input PDF page numbers","code":""},{"path":"http://yongfu.name/stom/reference/inkscape_pdf_pager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct output file paths based on input PDF page numbers — inkscape_pdf_pager","text":"","code":"inkscape_pdf_pager(pdf_file, to_ext = \".svg\", outfile = NULL, page = NULL)"},{"path":"http://yongfu.name/stom/reference/inkscape_run_through_pages.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Inkscape through pages of PDF input, where page info is given by the\r\nout_info arg obtained through inkscape_pdf_pager() — inkscape_run_through_pages","title":"Run Inkscape through pages of PDF input, where page info is given by the\r\nout_info arg obtained through inkscape_pdf_pager() — inkscape_run_through_pages","text":"Run Inkscape pages PDF input, page info given out_info arg obtained inkscape_pdf_pager()","code":""},{"path":"http://yongfu.name/stom/reference/inkscape_run_through_pages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Inkscape through pages of PDF input, where page info is given by the\r\nout_info arg obtained through inkscape_pdf_pager() — inkscape_run_through_pages","text":"","code":"inkscape_run_through_pages(infile, base_cmd, out_info)"},{"path":"http://yongfu.name/stom/reference/inline.html","id":null,"dir":"Reference","previous_headings":"","what":"Format vectors as inline text — inline","title":"Format vectors as inline text — inline","text":"functions expect work R Markdown's inline R chunk syntax `r `, , instance, numbered `r inline(1:3)` respectively results numbered 1, 2, 3 respectively.","code":""},{"path":"http://yongfu.name/stom/reference/inline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format vectors as inline text — inline","text":"","code":"inline(x, sep = \", \", last_sep = \", and \", two_sep = \" and \")  inline_zh(x, sep = \"<U+3001>\", last_sep = \"<U+3001>\", two_sep = \" <U+8207> \")"},{"path":"http://yongfu.name/stom/reference/inline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format vectors as inline text — inline","text":"","code":"inline(1:2) #> [1] \"1 and 2\" inline(1:3) #> [1] \"1, 2, and 3\" inline_zh(1:2) #> [1] \"1 \\350\\210\\207 2\" inline_zh(1:3) #> [1] \"1\\343\\200\\2012\\343\\200\\2013\""},{"path":"http://yongfu.name/stom/reference/logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Links and Inverse Links for Logistic Regression — logit","title":"Links and Inverse Links for Logistic Regression — logit","text":"Links Inverse Links Logistic Regression","code":""},{"path":"http://yongfu.name/stom/reference/logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Links and Inverse Links for Logistic Regression — logit","text":"","code":"logit(p)  inv_logit(x)  logistic(x)"},{"path":"http://yongfu.name/stom/reference/logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Links and Inverse Links for Logistic Regression — logit","text":"p Numeric vector. Values probability scale. x Numeric vector. Values linear scale.","code":""},{"path":"http://yongfu.name/stom/reference/pandoc_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Pandoc wrappers for converting markdown to pre-styled documents — pandoc_pdf","title":"Pandoc wrappers for converting markdown to pre-styled documents — pandoc_pdf","text":"Pandoc wrappers converting markdown pre-styled documents","code":""},{"path":"http://yongfu.name/stom/reference/pandoc_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pandoc wrappers for converting markdown to pre-styled documents — pandoc_pdf","text":"","code":"pandoc_pdf(fin, outfp, style = \"amsart\")  pandoc_html(fin, outfp, style = NULL)"},{"path":"http://yongfu.name/stom/reference/pat_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Stan parameter regex pattern — pat_depth","title":"Stan parameter regex pattern — pat_depth","text":"Stan parameter regex pattern","code":""},{"path":"http://yongfu.name/stom/reference/pat_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stan parameter regex pattern — pat_depth","text":"","code":"pat_depth(depth = 1)"},{"path":"http://yongfu.name/stom/reference/pat_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stan parameter regex pattern — pat_depth","text":"depth Integer. parameters' dimension number. Parameters dimension number equal less depth retrieved.","code":""},{"path":"http://yongfu.name/stom/reference/pat_depth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stan parameter regex pattern — pat_depth","text":"","code":"pat_depth(0) #> Error in pat_depth(0): could not find function \"pat_depth\" pat_depth(1) #> Error in pat_depth(1): could not find function \"pat_depth\" pat_depth(2) #> Error in pat_depth(2): could not find function \"pat_depth\" grepl( pat_depth(0), c(\"a\", \"a[1]\", \"a[1,2]\", \"a[1,2,3]\") ) #> Error in pat_depth(0): could not find function \"pat_depth\" grepl( pat_depth(2), c(\"a\", \"a[1]\", \"a[1,2]\", \"a[1,2,3]\") ) #> Error in pat_depth(2): could not find function \"pat_depth\""},{"path":"http://yongfu.name/stom/reference/pdf2png.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector graphics conversion — pdf2png","title":"Vector graphics conversion — pdf2png","text":"Convert PDF/SVG file images formats Inkscape.","code":""},{"path":"http://yongfu.name/stom/reference/pdf2png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector graphics conversion — pdf2png","text":"","code":"pdf2png(infile, outfile = NULL, page = NULL, dpi = 1200)  pdf2svg(infile, outfile = NULL, page = NULL)  svg2pdf(infile, outfile = NULL)  svg2png(infile, outfile = NULL, dpi = 1200)"},{"path":"http://yongfu.name/stom/reference/pdf2png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector graphics conversion — pdf2png","text":"infile String. Path input PDF file. outfile Character vector. Output file paths without file extensions. File extensions set .png *2png(); .svg pdf2svg(); .pdf svg2pdf(). length outfile 1 corresponds length page. mismatch, first element outfile taken file stem, page numbers appended file stem suffixes. default, outfile set NULL, input PDF file stem used. page Integer vector. pages (starting 1) extract PDF file, defaults NULL, every page converted image. dpi Integer. \"Dots Per Inch\" PNG outputs pdf2png().","code":""},{"path":"http://yongfu.name/stom/reference/pdf2png.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vector graphics conversion — pdf2png","text":"use function, inkscape available command line. Alternatively, users can specify absolute path inkscape option stom.inkscape (e.g., options(stom.inkscape = \"/home/stom/bin/inkscape\")).","code":""},{"path":"http://yongfu.name/stom/reference/pdf2png.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector graphics conversion — pdf2png","text":"","code":"if (FALSE) { infile = system.file(\"inkscape\", \"dag.pdf\", package = \"stom\") pdf2svg( infile, outfile=\"dag.svg\" ) pdf2png( infile, outfile=\"dag.png\", dpi=800 ) svg2pdf( \"dag.svg\", \"dag2.pdf\" ) svg2png( \"dag.svg\", \"dag2.png\" ) }"},{"path":"http://yongfu.name/stom/reference/precis.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior summary and extraction from CmdStanFit objects — precis","title":"Posterior summary and extraction from CmdStanFit objects — precis","text":"Posterior summary extraction CmdStanFit objects","code":""},{"path":"http://yongfu.name/stom/reference/precis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior summary and extraction from CmdStanFit objects — precis","text":"","code":"precis(fit, depth = 1, pars = NULL, lp = F)  extract(fit, pars = NULL, lp = F)"},{"path":"http://yongfu.name/stom/reference/precis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior summary and extraction from CmdStanFit objects — precis","text":"fit CmdStanFit object. depth Integer. level parameters display. 0 scalar; 1 scalar vector; 2 scalar, vector, matrix; . pars Character vector. Names variables include. Passed variables argument cmdstanr's $summary()/$draws(). lp Boolean. Whether include log probabilities output.","code":""},{"path":"http://yongfu.name/stom/reference/precis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior summary and extraction from CmdStanFit objects — precis","text":"data frame","code":""},{"path":"http://yongfu.name/stom/reference/precis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior summary and extraction from CmdStanFit objects — precis","text":"","code":"# Fitted model fp = system.file(\"cases\", \"wine_network\", \"wine2_normal_first_level2.RDS\", package=\"stom\") m = readRDS(fp)  # Posterior distribution summary precis( m, depth=2, pars=\"Int,J\" )  # or pars=c(\"Int\", \"J\") #>    variable        mean        sd         q5        q95     rhat  ess_bulk #> 1  Int[1,1]  1.46065860 0.4155012  0.7738191  2.1368475 1.005829  596.2273 #> 2  Int[2,1]  1.60776153 0.3527793  1.0167770  2.1725515 1.004828  638.9929 #> 3  Int[1,2] -0.29323172 0.4002178 -0.9390186  0.3660294 1.007534  626.0339 #> 4  Int[2,2]  0.00000000 0.0000000  0.0000000  0.0000000       NA        NA #> 5      J[1] -0.38478502 0.3799942 -0.9994123  0.2432264 1.005196  698.6300 #> 6      J[2]  1.40204140 0.3881811  0.7713947  2.0574410 1.005678  695.9941 #> 7      J[3]  0.17605415 0.3844786 -0.4439989  0.7984256 1.003867  725.7951 #> 8      J[4]  0.34203082 0.3874797 -0.2701835  0.9911882 1.004315  701.5242 #> 9      J[5] -0.25537684 0.3860228 -0.8714625  0.3889210 1.003792  695.2089 #> 10     J[6] -0.40992786 0.3827055 -1.0339180  0.2290665 1.004490  725.9601 #> 11     J[7]  0.46396758 0.3829940 -0.1486301  1.1153265 1.004482  719.1779 #> 12     J[8] -1.51783270 0.2867946 -1.9874985 -1.0400635 1.005495 1012.9021 #> 13     J[9] -0.94599734 0.2874214 -1.4051815 -0.4679022 1.007909 1066.7047 #> 14    J[10]  0.74630456 0.2868925  0.2910840  1.2200405 1.006798  978.7118 #> 15    J[11] -1.10221230 0.2873724 -1.5657620 -0.6261724 1.004553 1087.6786 #> 16    J[12]  1.80909484 0.2842524  1.3477965  2.2772970 1.005867 1017.2190 #> 17    J[13]  0.06987397 0.2781449 -0.3794031  0.5328615 1.006137  983.5072 #> 18    J[14]  0.24525450 0.2882109 -0.2209305  0.7204153 1.008201  998.5836  # Extract posterior samples post = extract(m) str(post) #> draws_df [4,000 x 92] (S3: draws_df/draws/tbl_df/tbl/data.frame) #>  $ W[1]      : num [1:4000] -0.0158 -0.187 -0.734 -0.5636 -0.5874 ... #>  $ W[2]      : num [1:4000] -0.0841 0.463 -0.3212 -0.5345 -0.292 ... #>  $ W[3]      : num [1:4000] -1.248 -0.534 -1.488 -1.374 -1.298 ... #>  $ W[4]      : num [1:4000] 1.529 1.119 0.504 0.235 0.429 ... #>  $ W[5]      : num [1:4000] 0.314 -0.135 -0.771 -0.771 -0.768 ... #>  $ W[6]      : num [1:4000] 1.04423 0.64068 0.00361 -0.18366 0.05693 ... #>  $ W[7]      : num [1:4000] 0.8662 0.7335 -0.0205 0.1177 0.1687 ... #>  $ W[8]      : num [1:4000] 0.889 0.556 -0.197 -0.377 -0.179 ... #>  $ W[9]      : num [1:4000] 1.33 1.038 0.416 0.445 0.28 ... #>  $ W[10]     : num [1:4000] 0.297 0.364 -0.313 -0.166 -0.117 ... #>  $ W[11]     : num [1:4000] -0.327 -0.192 -0.496 -0.895 -0.613 ... #>  $ W[12]     : num [1:4000] 0.939 1.131 0.593 0.694 0.73 ... #>  $ W[13]     : num [1:4000] 0.8695 0.6877 0.0365 0.1273 0.3824 ... #>  $ W[14]     : num [1:4000] -0.751 -0.898 -1.579 -1.809 -1.412 ... #>  $ W[15]     : num [1:4000] -0.00292 -0.24683 -0.88096 -1.04147 -0.84397 ... #>  $ W[16]     : num [1:4000] -1.77 -1 -2.21 -1.97 -1.54 ... #>  $ W[17]     : num [1:4000] 1.988 1.913 1.266 1.102 0.612 ... #>  $ W[18]     : num [1:4000] 2.03 1.65 1.4 1.38 1.31 ... #>  $ W[19]     : num [1:4000] 1.664 1.73 1.233 1.194 0.969 ... #>  $ W[20]     : num [1:4000] 0.0272 0.3132 -0.2881 -0.1649 -0.2281 ... #>  $ W[21]     : num [1:4000] 0.3107 0.0762 -0.5769 -0.4809 -0.2945 ... #>  $ W[22]     : num [1:4000] 1.298 1.25 0.303 0.276 0.211 ... #>  $ W[23]     : num [1:4000] -0.664 -1.083 -1.314 -1.595 -1.352 ... #>  $ W[24]     : num [1:4000] -1.04 -1.43 -1.87 -1.78 -1.25 ... #>  $ W[25]     : num [1:4000] -0.293 -0.235 -0.918 -0.632 -0.453 ... #>  $ W[26]     : num [1:4000] 0.318 0.391 -0.212 -0.271 -0.283 ... #>  $ J[1]      : num [1:4000] -0.9396 -0.7205 -0.3567 0.0858 -0.1114 ... #>  $ J[2]      : num [1:4000] 0.729 1.099 1.271 1.494 1.522 ... #>  $ J[3]      : num [1:4000] -0.2317 0.0751 0.2137 0.3774 0.6341 ... #>  $ J[4]      : num [1:4000] 0.0343 0.3392 0.5008 0.4388 0.6549 ... #>  $ J[5]      : num [1:4000] -0.518 -0.514 -0.258 -0.08 -0.385 ... #>  $ J[6]      : num [1:4000] -0.8853 -0.4669 -0.2202 -0.3753 -0.0616 ... #>  $ J[7]      : num [1:4000] 0.0902 0.4072 0.8518 0.9992 0.6837 ... #>  $ J[8]      : num [1:4000] -2.02 -2.02 -1.4 -1.19 -1.08 ... #>  $ J[9]      : num [1:4000] -1.657 -1.32 -0.635 -0.864 -1.013 ... #>  $ J[10]     : num [1:4000] 0.295 0.365 0.904 0.604 0.338 ... #>  $ J[11]     : num [1:4000] -1.403 -1.748 -1.201 -0.978 -1.018 ... #>  $ J[12]     : num [1:4000] 1.25 1.57 1.97 2.06 2.2 ... #>  $ J[13]     : num [1:4000] -0.3117 0.0141 0.0603 0.0507 0.3128 ... #>  $ J[14]     : num [1:4000] -0.281 -0.238 0.491 0.478 0.357 ... #>  $ Int[1,1]  : num [1:4000] 1.59 1.4 1.85 1.65 1.58 ... #>  $ Int[2,1]  : num [1:4000] 1.83 1.74 1.89 2.05 1.75 ... #>  $ Int[1,2]  : num [1:4000] -0.2375 -0.6001 -0.0834 -0.37 -0.2706 ... #>  $ Int[2,2]  : num [1:4000] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Int_raw[1]: num [1:4000] 1.59 1.4 1.85 1.65 1.58 ... #>  $ Int_raw[2]: num [1:4000] -0.2375 -0.6001 -0.0834 -0.37 -0.2706 ... #>  $ Int_raw[3]: num [1:4000] 1.83 1.74 1.89 2.05 1.75 ... #>  $ zJ[1]     : num [1:4000] -0.754 -0.637 -0.46 0.112 -0.142 ... #>  $ zJ[2]     : num [1:4000] 0.584 0.972 1.64 1.944 1.94 ... #>  $ zJ[3]     : num [1:4000] -0.1859 0.0664 0.2757 0.491 0.8079 ... #>  $ zJ[4]     : num [1:4000] 0.0275 0.2999 0.6461 0.5709 0.8344 ... #>  $ zJ[5]     : num [1:4000] -0.416 -0.455 -0.332 -0.104 -0.49 ... #>  $ zJ[6]     : num [1:4000] -0.7102 -0.4128 -0.2841 -0.4882 -0.0785 ... #>  $ zJ[7]     : num [1:4000] 0.0724 0.3601 1.0988 1.3 0.871 ... #>  $ zJ[8]     : num [1:4000] -1.62 -1.78 -1.8 -1.55 -1.38 ... #>  $ zJ[9]     : num [1:4000] -1.329 -1.167 -0.819 -1.125 -1.291 ... #>  $ zJ[10]    : num [1:4000] 0.237 0.323 1.166 0.786 0.43 ... #>  $ zJ[11]    : num [1:4000] -1.13 -1.55 -1.55 -1.27 -1.3 ... #>  $ zJ[12]    : num [1:4000] 1 1.39 2.54 2.67 2.8 ... #>  $ zJ[13]    : num [1:4000] -0.25 0.0125 0.0777 0.066 0.3985 ... #>  $ zJ[14]    : num [1:4000] -0.226 -0.21 0.634 0.621 0.455 ... #>  $ zW[1]     : num [1:4000] -0.0158 -0.1981 -0.8422 -0.6991 -0.8114 ... #>  $ zW[2]     : num [1:4000] -0.0842 0.4905 -0.3685 -0.663 -0.4034 ... #>  $ zW[3]     : num [1:4000] -1.25 -0.566 -1.707 -1.705 -1.793 ... #>  $ zW[4]     : num [1:4000] 1.531 1.186 0.578 0.292 0.592 ... #>  $ zW[5]     : num [1:4000] 0.315 -0.143 -0.885 -0.956 -1.06 ... #>  $ zW[6]     : num [1:4000] 1.04567 0.67864 0.00414 -0.22782 0.07864 ... #>  $ zW[7]     : num [1:4000] 0.8674 0.777 -0.0235 0.146 0.233 ... #>  $ zW[8]     : num [1:4000] 0.89 0.589 -0.226 -0.468 -0.247 ... #>  $ zW[9]     : num [1:4000] 1.332 1.1 0.478 0.552 0.387 ... #>  $ zW[10]    : num [1:4000] 0.297 0.385 -0.359 -0.206 -0.162 ... #>  $ zW[11]    : num [1:4000] -0.328 -0.204 -0.569 -1.11 -0.847 ... #>  $ zW[12]    : num [1:4000] 0.94 1.198 0.68 0.861 1.008 ... #>  $ zW[13]    : num [1:4000] 0.8707 0.7284 0.0419 0.1579 0.5282 ... #>  $ zW[14]    : num [1:4000] -0.752 -0.951 -1.812 -2.244 -1.951 ... #>  $ zW[15]    : num [1:4000] -0.00293 -0.26146 -1.0109 -1.29183 -1.16576 ... #>  $ zW[16]    : num [1:4000] -1.77 -1.06 -2.53 -2.45 -2.13 ... #>  $ zW[17]    : num [1:4000] 1.991 2.027 1.453 1.367 0.845 ... #>  $ zW[18]    : num [1:4000] 2.03 1.75 1.6 1.71 1.81 ... #>  $ zW[19]    : num [1:4000] 1.67 1.83 1.41 1.48 1.34 ... #>  $ zW[20]    : num [1:4000] 0.0272 0.3317 -0.3306 -0.2045 -0.3151 ... #>  $ zW[21]    : num [1:4000] 0.3112 0.0807 -0.662 -0.5965 -0.4068 ... #>  $ zW[22]    : num [1:4000] 1.3 1.325 0.347 0.343 0.292 ... #>  $ zW[23]    : num [1:4000] -0.664 -1.147 -1.508 -1.979 -1.867 ... #>  $ zW[24]    : num [1:4000] -1.04 -1.52 -2.15 -2.21 -1.73 ... #>  $ zW[25]    : num [1:4000] -0.293 -0.249 -1.054 -0.784 -0.626 ... #>  $ zW[26]    : num [1:4000] 0.318 0.414 -0.243 -0.336 -0.391 ... #>  $ sigma_J   : num [1:4000] 1.247 1.131 0.775 0.769 0.785 ... #>  $ sigma_W   : num [1:4000] 0.999 0.944 0.871 0.806 0.724 ... #>  $ .chain    : int [1:4000] 1 1 1 1 1 1 1 1 1 1 ... #>  $ .iteration: int [1:4000] 1 2 3 4 5 6 7 8 9 10 ... #>  $ .draw     : int [1:4000] 1 2 3 4 5 6 7 8 9 10 ..."},{"path":"http://yongfu.name/stom/reference/rbern.html","id":null,"dir":"Reference","previous_headings":"","what":"Bernoulli Random Number Generator — rbern","title":"Bernoulli Random Number Generator — rbern","text":"Alias rbinom() single trial (size = 1).","code":""},{"path":"http://yongfu.name/stom/reference/rbern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bernoulli Random Number Generator — rbern","text":"","code":"rbern(prob, n = length(prob))"},{"path":"http://yongfu.name/stom/reference/rbern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bernoulli Random Number Generator — rbern","text":"prob Vector probabilities. n Numbers sample, defaults length prob.","code":""},{"path":"http://yongfu.name/stom/reference/replace_file_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace file extension — replace_file_ext","title":"Replace file extension — replace_file_ext","text":"Replace file extension","code":""},{"path":"http://yongfu.name/stom/reference/replace_file_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace file extension — replace_file_ext","text":"","code":"replace_file_ext(fp, ext = \"\")"},{"path":"http://yongfu.name/stom/reference/replace_file_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace file extension — replace_file_ext","text":"fp Character vector file paths. ext String. Extension (dot) change .","code":""},{"path":"http://yongfu.name/stom/reference/replace_file_ext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace file extension — replace_file_ext","text":"","code":"replace_file_ext(\"x/y/zcda.txt\") #> [1] \"x/y/zcda\" replace_file_ext(paste0(1:3, \".txt\"), \".stan\") #> [1] \"1.stan\" \"2.stan\" \"3.stan\""},{"path":"http://yongfu.name/stom/reference/rordlogit.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Number Generator from Ordered Logit Distribution — rordlogit","title":"Random Number Generator from Ordered Logit Distribution — rordlogit","text":"Random Number Generator Ordered Logit Distribution","code":""},{"path":"http://yongfu.name/stom/reference/rordlogit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Number Generator from Ordered Logit Distribution — rordlogit","text":"","code":"rordlogit(phi, kappa)"},{"path":"http://yongfu.name/stom/reference/rordlogit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Number Generator from Ordered Logit Distribution — rordlogit","text":"phi Numeric. linear term(s) subtract ordered categories. kappa vector cut-points delineating ordered categories logit scale. generating n categories, n-1 cut-points needed. include (negative) Inf values.","code":""},{"path":"http://yongfu.name/stom/reference/rordlogit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Number Generator from Ordered Logit Distribution — rordlogit","text":"","code":"kappa = c( -1.5, 0, 1.5 ) rordlogit( phi=0, kappa=kappa ) #> [1] 3 x = replicate( 1e4, {rordlogit(0, kappa)}) table(x) / length(x) #> x #>      1      2      3      4  #> 0.1774 0.3145 0.3229 0.1852  logistic( c(kappa, Inf) ) - logistic( c(-Inf, kappa) ) #> [1] 0.1824255 0.3175745 0.3175745 0.1824255"},{"path":"http://yongfu.name/stom/reference/rtnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Number Generator for Truncated Normal Distribution — rtnorm","title":"Random Number Generator for Truncated Normal Distribution — rtnorm","text":"parameters set generate numbers half-normal distribution default.","code":""},{"path":"http://yongfu.name/stom/reference/rtnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Number Generator for Truncated Normal Distribution — rtnorm","text":"","code":"rtnorm(n, m = 0, s = 1, lower = 0, upper = Inf)"},{"path":"http://yongfu.name/stom/reference/rtnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Number Generator for Truncated Normal Distribution — rtnorm","text":"n Numbers sample. m mean untruncated normal distribution. s standard deviation untruncated normal distribution. lower lower bound truncation. upper upper bound truncation.","code":""},{"path":"http://yongfu.name/stom/reference/save_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Save CmdStanFit object as RDS with a cross-platform consistent name — save_model","title":"Save CmdStanFit object as RDS with a cross-platform consistent name — save_model","text":"Save CmdStanFit object RDS cross-platform consistent name","code":""},{"path":"http://yongfu.name/stom/reference/save_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save CmdStanFit object as RDS with a cross-platform consistent name — save_model","text":"","code":"save_model(m, fp = NULL)"},{"path":"http://yongfu.name/stom/reference/save_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save CmdStanFit object as RDS with a cross-platform consistent name — save_model","text":"m CmdStanFit object returned stom::stan().","code":""},{"path":"http://yongfu.name/stom/reference/simplex.html","id":null,"dir":"Reference","previous_headings":"","what":"Commonly used statistical transformation — simplex","title":"Commonly used statistical transformation — simplex","text":"Commonly used statistical transformation","code":""},{"path":"http://yongfu.name/stom/reference/simplex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Commonly used statistical transformation — simplex","text":"","code":"simplex(x)"},{"path":"http://yongfu.name/stom/reference/simplex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Commonly used statistical transformation — simplex","text":"","code":"simplex( rep(1,3) ) #> [1] 0.3333333 0.3333333 0.3333333"},{"path":"http://yongfu.name/stom/reference/stan.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile and sample with cmdstanr — stan","title":"Compile and sample with cmdstanr — stan","text":"Compile sample cmdstanr","code":""},{"path":"http://yongfu.name/stom/reference/stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile and sample with cmdstanr — stan","text":"","code":"stan(stan_file, data, refresh = 250, ...)"},{"path":"http://yongfu.name/stom/reference/stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile and sample with cmdstanr — stan","text":"stan_file String. Stan file path. data List. Data list. seed Integer. Random seed passed cmdstanr's $sample().","code":""},{"path":"http://yongfu.name/stom/reference/stan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile and sample with cmdstanr — stan","text":"CmdStanFit object.","code":""},{"path":"http://yongfu.name/stom/reference/stan2bin.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert stan file path to stan binary file path — stan2bin","title":"Convert stan file path to stan binary file path — stan2bin","text":"Assumes *.stan & compiled binary found directory.","code":""},{"path":"http://yongfu.name/stom/reference/stan2bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert stan file path to stan binary file path — stan2bin","text":"","code":"stan2bin(fp)"},{"path":"http://yongfu.name/stom/reference/stan2bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert stan file path to stan binary file path — stan2bin","text":"fp Path *.stan file","code":""},{"path":"http://yongfu.name/stom/reference/standardize.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize a vector to fixed mean and std — standardize","title":"Standardize a vector to fixed mean and std — standardize","text":"Standardize vector fixed mean std","code":""},{"path":"http://yongfu.name/stom/reference/standardize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize a vector to fixed mean and std — standardize","text":"","code":"standardize(x, m = 0, s = 1)"},{"path":"http://yongfu.name/stom/reference/standardize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize a vector to fixed mean and std — standardize","text":"x Numeric vector. m Mean. s Standard deviation.","code":""},{"path":"http://yongfu.name/stom/reference/stom-package.html","id":null,"dir":"Reference","previous_headings":"","what":"stom: Miscellaneous Functions for Statistical Modeling — stom-package","title":"stom: Miscellaneous Functions for Statistical Modeling — stom-package","text":"Personal package collection functions commonly used statistical modeling.","code":""},{"path":[]},{"path":"http://yongfu.name/stom/reference/stom-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"stom: Miscellaneous Functions for Statistical Modeling — stom-package","text":"Maintainer: Yongfu Liao liao961120@gmail.com (ORCID)","code":""},{"path":"http://yongfu.name/stom/reference/test_cmdstanr.html","id":null,"dir":"Reference","previous_headings":"","what":"Test cmdstanr compilation — test_cmdstanr","title":"Test cmdstanr compilation — test_cmdstanr","text":"Test cmdstanr compilation","code":""},{"path":"http://yongfu.name/stom/reference/test_cmdstanr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test cmdstanr compilation — test_cmdstanr","text":"","code":"test_cmdstanr(clean = F, draw_sample = T)"},{"path":"http://yongfu.name/stom/reference/test_cmdstanr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test cmdstanr compilation — test_cmdstanr","text":"clean Whether recompile binary found, defaults FALSE. draw_sample Whether draw samples, defaults TRUE.","code":""},{"path":"http://yongfu.name/stom/reference/to_unix_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize to Unix paths — to_unix_path","title":"Normalize to Unix paths — to_unix_path","text":"Normalize Unix paths","code":""},{"path":"http://yongfu.name/stom/reference/to_unix_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize to Unix paths — to_unix_path","text":"","code":"to_unix_path(x)  to_gitbash_path(x)  print_paths(x, win = T)"},{"path":"http://yongfu.name/stom/reference/to_unix_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize to Unix paths — to_unix_path","text":"x Character. Paths.","code":""},{"path":"http://yongfu.name/stom/reference/to_unix_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize to Unix paths — to_unix_path","text":"Character","code":""},{"path":"http://yongfu.name/stom/reference/to_unix_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize to Unix paths — to_unix_path","text":"","code":"fp = 'C:\\\\Users\\\\rd\\\\bin\\\\export_docs_pdf.R' to_unix_path(fp) #> [1] \"C:/Users/rd/bin/export_docs_pdf.R\" to_gitbash_path(fp) #> [1] \"/C/Users/rd/bin/export_docs_pdf.R\" get_cli_programs(F) |> print_paths() #> C:\\Users\\rd\\AppData\\Local\\Temp\\Rtmpuuox6g\\temp_libpath610c379f742a\\stom\\cli\\export_docs_pdf.R #> C:\\Users\\rd\\AppData\\Local\\Temp\\Rtmpuuox6g\\temp_libpath610c379f742a\\stom\\cli\\pandoc_pdf.R #> C:\\Users\\rd\\AppData\\Local\\Temp\\Rtmpuuox6g\\temp_libpath610c379f742a\\stom\\cli\\pdf2img.R"},{"path":"http://yongfu.name/stom/reference/xclip.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy to and from clipboard — xclip","title":"Copy to and from clipboard — xclip","text":"Copy clipboard","code":""},{"path":"http://yongfu.name/stom/reference/xclip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy to and from clipboard — xclip","text":"","code":"xclip(x)  readclip()"},{"path":"http://yongfu.name/stom/reference/xclip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy to and from clipboard — xclip","text":"x Character.","code":""},{"path":"http://yongfu.name/stom/reference/xclip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy to and from clipboard — xclip","text":"","code":"fp = 'C:\\\\Users\\\\rd\\\\bin\\\\export_docs_pdf.R' fp |> xclip()  # copy to clipboard #> Error in error_interactive(): To run write_clip() in non-interactive mode, either call write_clip() with allow_non_interactive = TRUE, or set the environment variable CLIPR_ALLOW=TRUE readclip() |> cat() #> Error in error_interactive(): To run write_clip() in non-interactive mode, either call write_clip() with allow_non_interactive = TRUE, or set the environment variable CLIPR_ALLOW=TRUE"}]
