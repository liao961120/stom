[{"path":"http://yongfu.name/stom/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yongfu Liao. Author, maintainer.","code":""},{"path":"http://yongfu.name/stom/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liao Y (2024). stom: Miscellaneous Functions Statistical Modeling. http://yongfu.name/stom, https://github.com/liao961120/stom.","code":"@Manual{,   title = {stom: Miscellaneous Functions for Statistical Modeling},   author = {Yongfu Liao},   year = {2024},   note = {http://yongfu.name/stom, https://github.com/liao961120/stom}, }"},{"path":"http://yongfu.name/stom/index.html","id":"miscellaneous-functions-for-statistical-modeling","dir":"","previous_headings":"","what":"Miscellaneous Functions for Statistical Modeling","title":"Miscellaneous Functions for Statistical Modeling","text":"slow moving package. Interesting model-fitting scripts might found inst/cases. Otherwise, ’s just log personal scripts functions.","code":""},{"path":"http://yongfu.name/stom/reference/array_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplified array data type of R to match Stan's parameter dimensions Vector: 1D; matrix: 2D; array: 3D or above — array_type","title":"Simplified array data type of R to match Stan's parameter dimensions Vector: 1D; matrix: 2D; array: 3D or above — array_type","text":"Simplified array data type R match Stan's parameter dimensions Vector: 1D;  matrix: 2D;  array: 3D ","code":""},{"path":"http://yongfu.name/stom/reference/array_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplified array data type of R to match Stan's parameter dimensions Vector: 1D; matrix: 2D; array: 3D or above — array_type","text":"","code":"array_type(x)"},{"path":"http://yongfu.name/stom/reference/as_c_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector object as R input string — as_c_num","title":"Vector object as R input string — as_c_num","text":"Vector object R input string","code":""},{"path":"http://yongfu.name/stom/reference/as_c_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector object as R input string — as_c_num","text":"","code":"as_c_num(x)  as_c_chr(x)"},{"path":"http://yongfu.name/stom/reference/as_c_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector object as R input string — as_c_num","text":"","code":"as_c_num(1:3) #> c(1, 2, 3)  as_c_chr(1:3) #> c('1', '2', '3')"},{"path":"http://yongfu.name/stom/reference/as_posterior_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert posterior data frame to a list of array — as_posterior_array","title":"Convert posterior data frame to a list of array — as_posterior_array","text":"Convert posterior data frame list array","code":""},{"path":"http://yongfu.name/stom/reference/as_posterior_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert posterior data frame to a list of array — as_posterior_array","text":"","code":"as_posterior_array(d, param = NULL, sample_n = NULL)"},{"path":"http://yongfu.name/stom/reference/as_posterior_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert posterior data frame to a list of array — as_posterior_array","text":"d Data frame. Posterior samples returned stom::extract() stom::get_pars(). param String. Name parameter extract (without brackets). default, NULL, assumes input data frame d contains columns parameter interest. sample Integer. Number samples draw posterior samples. NULL, returns full data frame posterior samples.","code":""},{"path":"http://yongfu.name/stom/reference/as_posterior_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert posterior data frame to a list of array — as_posterior_array","text":"list arrays, array corresponding draw posterior samples (.e. row posterior data frame).","code":""},{"path":"http://yongfu.name/stom/reference/as_posterior_array.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert posterior data frame to a list of array — as_posterior_array","text":"","code":"fp = system.file(\"cases\", \"wine_network\", \"wine2_normal_first_level2.RDS\", package=\"stom\") m = readRDS(fp) post = extract(m) as_posterior_array( post, param=\"Int\", sample_n=5 ) #> [[1]] #>         [,1]     [,2] #> [1,] 1.99758 0.015059 #> [2,] 2.14069 0.000000 #>  #> [[2]] #>         [,1]      [,2] #> [1,] 1.39175 -0.559822 #> [2,] 2.02846  0.000000 #>  #> [[3]] #>         [,1]        [,2] #> [1,] 1.32129 -0.00905156 #> [2,] 1.44586  0.00000000 #>  #> [[4]] #>         [,1]      [,2] #> [1,] 1.36939 -0.886437 #> [2,] 2.07201  0.000000 #>  #> [[5]] #>         [,1]      [,2] #> [1,] 1.17571 -0.490894 #> [2,] 1.17411  0.000000 #>"},{"path":"http://yongfu.name/stom/reference/as_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Handy vector construction from string — as_vec","title":"Handy vector construction from string — as_vec","text":"Handy vector construction string","code":""},{"path":"http://yongfu.name/stom/reference/as_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handy vector construction from string — as_vec","text":"","code":"as_vec(x, cast_num = TRUE)"},{"path":"http://yongfu.name/stom/reference/as_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handy vector construction from string — as_vec","text":"x String. string construct vector (see examples). x length > 1, stom::as_c_num stom::as_c_chr called (depending input type) print concatenation syntax c(...) console. cast_num Boolean. Whether convert string numeric applicable. See examples.","code":""},{"path":"http://yongfu.name/stom/reference/as_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handy vector construction from string — as_vec","text":"","code":"# Construct vector from string as_vec(\"a b c\") #> [1] \"a\" \"b\" \"c\" as_vec(\"d, e  f\")   # Commas have precedence over spaces #> [1] \"d\"    \"e  f\"  # Auto typecasting as_vec(\"1 2 -3.1\") #> [1]  1.0  2.0 -3.1 as_vec(\"04, 05\") #> [1] 4 5 as_vec(\"04, 05\", cast_num=FALSE)  # Disable typecasting #> [1] \"04\" \"05\""},{"path":"http://yongfu.name/stom/reference/bin_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns binary extension depending on OS — bin_ext","title":"Returns binary extension depending on OS — bin_ext","text":"Returns binary extension depending OS","code":""},{"path":"http://yongfu.name/stom/reference/bin_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns binary extension depending on OS — bin_ext","text":"","code":"bin_ext()"},{"path":"http://yongfu.name/stom/reference/cmd_get_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Primitive parsing of command line arguments — cmd_get_value","title":"Primitive parsing of command line arguments — cmd_get_value","text":"Primitive parsing command line arguments","code":""},{"path":"http://yongfu.name/stom/reference/cmd_get_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Primitive parsing of command line arguments — cmd_get_value","text":"","code":"cmd_get_value(args, pre)  cmd_has(args, has)  cmd_parse_date(args, pre = \"--date=\")"},{"path":"http://yongfu.name/stom/reference/cmd_get_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Primitive parsing of command line arguments — cmd_get_value","text":"args Character vector. Returned base::commandArgs(TRUE). pre String. Command line prefix retrieve value . Character vector. Arguments checked presence command line arguments.","code":""},{"path":"http://yongfu.name/stom/reference/cmd_get_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Primitive parsing of command line arguments — cmd_get_value","text":"","code":"args = c( \"--date=2022-11-20\", \"--second\" ) cmd_get_value(args, \"--date=\") #> [1] \"2022-11-20\" cmd_parse_date(args) #> [1] \"2022-11-20\" cmd_has(args, \"--second\") #> [1] TRUE"},{"path":"http://yongfu.name/stom/reference/cmd_parse_args.html","id":null,"dir":"Reference","previous_headings":"","what":"(Deprecated) Full parsing of command line arguments — cmd_parse_args","title":"(Deprecated) Full parsing of command line arguments — cmd_parse_args","text":"(Deprecated) Full parsing command line arguments","code":""},{"path":"http://yongfu.name/stom/reference/cmd_parse_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Deprecated) Full parsing of command line arguments — cmd_parse_args","text":"","code":"cmd_parse_args(x)  cmd_parse_key_val(x)"},{"path":"http://yongfu.name/stom/reference/cmd_parse_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Deprecated) Full parsing of command line arguments — cmd_parse_args","text":"x vector command line arguments.","code":""},{"path":"http://yongfu.name/stom/reference/cmd_parse_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Deprecated) Full parsing of command line arguments — cmd_parse_args","text":"list parsed arguments","code":""},{"path":"http://yongfu.name/stom/reference/cmd_parse_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(Deprecated) Full parsing of command line arguments — cmd_parse_args","text":"","code":"x = c(\"--date=2021\", \"--hi-w=y\", \"--hi_w=y\", \"./file-info.txt\", \"--hi\") cmd_parse_args(x) #> $args #> [1] \"./file-info.txt\" #>  #> $named #>   date   hi-w   hi_w  #> \"2021\"    \"y\"    \"y\"  #>  #> $opts #> [1] \"--hi\" #>"},{"path":"http://yongfu.name/stom/reference/col.alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions stolen from the rethinking package — col.alpha","title":"Functions stolen from the rethinking package — col.alpha","text":"Functions stolen rethinking package","code":""},{"path":"http://yongfu.name/stom/reference/col.alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions stolen from the rethinking package — col.alpha","text":"","code":"col.alpha(acol, alpha = 0.5)  shade(   object,   lim,   label = NULL,   col = col.alpha(\"black\", 0.15),   border = NA,   ... )"},{"path":"http://yongfu.name/stom/reference/curve_mvnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Add multivariate normal contour to plot — curve_mvnorm","title":"Add multivariate normal contour to plot — curve_mvnorm","text":"Add multivariate normal contour plot","code":""},{"path":"http://yongfu.name/stom/reference/curve_mvnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add multivariate normal contour to plot — curve_mvnorm","text":"","code":"curve_mvnorm(   mu,   Sigma,   level = c(seq(0.1, 0.9, 0.1), 0.99),   col = 1,   alpha = 0.1,   ... )"},{"path":"http://yongfu.name/stom/reference/curve_mvnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add multivariate normal contour to plot — curve_mvnorm","text":"mu Vector MVNormal center. Sigma Covariance matrix MVNormal. level values cumulative density plot contours. col Color contours. alpha Opacity contours. ... arguments passed graphics::lines().","code":""},{"path":"http://yongfu.name/stom/reference/curve_mvnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add multivariate normal contour to plot — curve_mvnorm","text":"","code":"mu = c(.5, .7) Rho = matrix(c(     1, .2,    .2,  1 ), nrow=2, byrow=T) s = c( 1.5, 1.2 ) Sigma = diag(s) %*% Rho %*% diag(s) x = MASS::mvrnorm(50, mu, Sigma) plot(x)  curve_mvnorm(mu, Sigma) #> Error in loadNamespace(x): there is no package called 'ellipse'"},{"path":"http://yongfu.name/stom/reference/export_docs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract docstring from R script to various output formats — export_docs","title":"Extract docstring from R script to various output formats — export_docs","text":"docstring defined lines start #'. avoid problems converting .pdf .html, format documentation comply Pandoc's markdown syntax. allow execution  export_docs_html() export_docs_pdf(), pandoc needs available command line. addition, LaTeX distribution (e.g. TeXLive) also required PDF compilation.","code":""},{"path":"http://yongfu.name/stom/reference/export_docs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract docstring from R script to various output formats — export_docs","text":"","code":"export_docs(path, outfp = NULL)  export_docs_pdf(path, outfp, style = \"amsart\")  export_docs_html(path, outfp)"},{"path":"http://yongfu.name/stom/reference/export_docs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract docstring from R script to various output formats — export_docs","text":"path Path input R script. outfp Output file path write . style String. Predefined style apply PDF outputs. Currently, amsart available.","code":""},{"path":"http://yongfu.name/stom/reference/export_docs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract docstring from R script to various output formats — export_docs","text":"","code":"(fin = system.file(\"cases\", \"wine_network\", \"wine.R\", package = \"stom\")) #> [1] \"C:/Users/tomliao/AppData/Local/Programs/R/R-4.2.3/library/stom/cases/wine_network/wine.R\" docstring = export_docs(fin)  # Return as character vector if `outfp=NULL` cat(docstring, sep=\"\\n\") #> --- #> title: Joint Estimation of Interaction and Piped Effects in an Item Response Model #> author: \"Yongfu Liao\" #> date: \"April 27, 2023\" #> --- #>  #> Description #> ----------- #>  #> The Directed Acyclic Graph (DAG) shown below represent the data generating #> process of the IRT model of interest. It can be conceptualized as a wine #> rating context, where the rating of wine quality ($R$) is influenced by #> three factors: #>  #> 1. $J$: Judge leniency #> 2. $W$: Wine quality #> 3. $O_w$: Wine origin #>  #> Furthermore, it is assumed that $O_w$ differentially influences $R$ #> based on the levels of another variable $O_j$, the origin of the judge. #> In stats jargon, there's an interaction between $O_w$ and $O_j$. In simpler #> conceptual terms, consider the scenario that, for instance, French wines are #> rated higher by French judges, in addition to the scores they should have #> received based on their quality alone. The simulation code of this data #> generating process is found in the `sim_dat()` function in `wine.R`. #>  #> ![Underlying data-generating process of the IRT Model](dag) #>  #> The Original Model and its Problem #> ---------------------------------- #>  #> The specification of the original model is shown in the equations below. #> A problem found in this model is that it cannot stably recover the wine #> quality (`W`) and the interaction (`Int`) parameters. #>  #> $$ #> \\begin{aligned} #> R & \\sim Bernoulli( p )  \\\\ #> logit(p) &= W_{[Wid]} + J_{[Jid]} + Int_{[O_j, O_w]} \\\\ #> J & \\sim Normal( 0, \\sigma_J )  \\\\ #> \\sigma_J & \\sim Exponential(1) \\\\ #> \\\\ #> W_{[Wid]} & \\sim Normal( a_{[O_w]}, \\sigma_W )  \\\\ #> a & \\sim Normal( 0, 1.5 )  \\\\ #> \\sigma_W & \\sim Exponential(1) #> \\end{aligned} #> $$ #>  #>  #> Potential Causes #> ---------------- #>  #> With some exploration on a simpler model (the response was modeled as normal #> distributions generated from latent scores), it was found that the problem #> seemed to arise from an identifiablity issue: the model cannot correctly #> attribute the right amount of effect to wine quality (which is influenced by #> wine origin) and the direct (interactive) influence of wine origin on rating #> scores. The parameter estimates float around case by case when different #> configurations of the interaction are set in the simulation. #>  #>  #> Fixes #> ----- #>  #> As illustrated in `wine2_normal.stan` (Case 4 & 5), the problem can be fixed #> by imposing additional constraints on the model. Two of them are imposed #> here to correctly identify the parameters: #>  #> 1. A sum-to-zero constraint on the effects of wine origin on wine quality. #>    That is, the effect through the path $O_w \\rightarrow W$. #> 2. One of a term in the interaction matrix (`(2, 2)` in the case here) is #>    constraint to zero as the reference. #>  #>  #> ToDo #> ---- #>  #> Test whether the conclusion also holds with logit models (binary/ordinal #> response models). if (FALSE) { export_docs(fin, \"docs.md\") export_docs_pdf(fin, \"docs.pdf\") export_docs_html(fin, \"docs.html\") }"},{"path":"http://yongfu.name/stom/reference/extract2.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 representation of posterior samples — extract2","title":"R6 representation of posterior samples — extract2","text":"extract2() provides object-oriented interface posterior samples extracted Stan model. particular, high dimensional parameters (.e., vectors, matrices, arrays) gathered arrays corresponding dimensions R. restructured high dimensional parameters, well scalar parameters, exposed public methods returned R6 object. See example.","code":""},{"path":"http://yongfu.name/stom/reference/extract2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 representation of posterior samples — extract2","text":"","code":"extract2(fit, ...)"},{"path":"http://yongfu.name/stom/reference/extract2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 representation of posterior samples — extract2","text":"fit CmdStanFit object passed extract(). ... Arguments passed extract().","code":""},{"path":"http://yongfu.name/stom/reference/extract2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 representation of posterior samples — extract2","text":"R6, postParams object.","code":""},{"path":"http://yongfu.name/stom/reference/extract2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 representation of posterior samples — extract2","text":"","code":"fp_mod = system.file(\"cases\", \"treatment_dynamics\", \"1-simplified-normal-model\", \"m1.RDS\", package=\"stom\") m = readRDS(fp_mod)  # CmdStanFit model cache post = extract2(m) str(post) #> Classes 'postParams', 'R6' <postParams> #>   Public: #>     .chain: function (idx = NULL)  #>     .draw: function (idx = NULL)  #>     .iteration: function (idx = NULL)  #>     B_AD: function (idx = NULL)  #>     B_AE: function (idx = NULL)  #>     B_ED: function (idx = NULL)  #>     B_TD: function (idx = NULL)  #>     B_TE: function (idx = NULL)  #>     E: function (idx = NULL)  #>     E_raw: function (idx = NULL)  #>     I: function (idx = NULL)  #>     alpha: function (idx = NULL)  #>     clone: function (deep = FALSE)  #>     gamma: function (idx = NULL)  #>     initialize: function (post, par_info)  #>     kappa: function (idx = NULL)  #>     lp__: function (idx = NULL)  #>     sigma_D: function (idx = NULL)  #>     sigma_ET: function (idx = NULL)  #>     sigma_I: function (idx = NULL)  #>     zI_raw: function (idx = NULL)  #>   Private: #>     .cache: list #>     .par_info: list #>     .post: draws_df, draws, tbl_df, tbl, data.frame #>     add_function: function (name, meth)  #>     get_param: function (p)    post$B_AD() |> str() #>  num [1:3000] 0.7 0.662 0.87 0.693 0.543 ... post$B_TE() |> str() #> List of 3000 #>  $ : num [1:3(1d)] 0.651 0.922 1.687 #>  $ : num [1:3(1d)] 0.609 0.707 1.697 #>  $ : num [1:3(1d)] 0.521 0.808 1.59 #>  $ : num [1:3(1d)] 0.689 0.741 1.839 #>  $ : num [1:3(1d)] 0.559 0.936 1.905 #>  $ : num [1:3(1d)] 0.556 0.901 1.878 #>  $ : num [1:3(1d)] 0.659 0.829 1.807 #>  $ : num [1:3(1d)] 0.713 0.525 1.406 #>  $ : num [1:3(1d)] 0.538 0.695 1.596 #>  $ : num [1:3(1d)] 0.66 0.601 1.527 #>  $ : num [1:3(1d)] 0.312 0.766 1.486 #>  $ : num [1:3(1d)] 0.524 0.623 1.622 #>  $ : num [1:3(1d)] 0.404 0.802 1.547 #>  $ : num [1:3(1d)] 0.61 0.866 1.644 #>  $ : num [1:3(1d)] 0.48 0.47 1.55 #>  $ : num [1:3(1d)] 0.564 0.918 1.583 #>  $ : num [1:3(1d)] 0.551 0.797 1.594 #>  $ : num [1:3(1d)] 0.484 0.525 1.362 #>  $ : num [1:3(1d)] 0.49 0.694 1.673 #>  $ : num [1:3(1d)] 0.593 0.658 1.456 #>  $ : num [1:3(1d)] 0.623 0.783 1.833 #>  $ : num [1:3(1d)] 0.575 0.757 1.8 #>  $ : num [1:3(1d)] 0.501 0.552 1.466 #>  $ : num [1:3(1d)] 0.558 0.542 1.509 #>  $ : num [1:3(1d)] 0.53 0.836 1.626 #>  $ : num [1:3(1d)] 0.196 0.655 1.681 #>  $ : num [1:3(1d)] 0.54 0.907 1.626 #>  $ : num [1:3(1d)] 0.658 0.731 1.714 #>  $ : num [1:3(1d)] 0.492 0.581 1.429 #>  $ : num [1:3(1d)] 0.395 0.844 1.642 #>  $ : num [1:3(1d)] 0.499 0.6 1.54 #>  $ : num [1:3(1d)] 0.288 0.512 1.589 #>  $ : num [1:3(1d)] 0.54 0.629 1.512 #>  $ : num [1:3(1d)] 0.487 0.618 1.475 #>  $ : num [1:3(1d)] 0.486 0.586 1.446 #>  $ : num [1:3(1d)] 0.47 0.613 1.447 #>  $ : num [1:3(1d)] 0.407 0.657 1.445 #>  $ : num [1:3(1d)] 0.583 0.689 1.602 #>  $ : num [1:3(1d)] 0.469 0.78 1.64 #>  $ : num [1:3(1d)] 0.368 0.513 1.486 #>  $ : num [1:3(1d)] 0.756 0.882 1.728 #>  $ : num [1:3(1d)] 0.707 0.891 1.687 #>  $ : num [1:3(1d)] 0.7 0.837 1.706 #>  $ : num [1:3(1d)] 0.459 0.73 1.544 #>  $ : num [1:3(1d)] 0.439 0.676 1.77 #>  $ : num [1:3(1d)] 0.526 0.599 1.515 #>  $ : num [1:3(1d)] 0.484 0.666 1.673 #>  $ : num [1:3(1d)] 0.399 0.756 1.548 #>  $ : num [1:3(1d)] 0.547 0.624 1.601 #>  $ : num [1:3(1d)] 0.617 0.884 1.717 #>  $ : num [1:3(1d)] 0.374 0.681 1.318 #>  $ : num [1:3(1d)] 0.436 0.726 1.488 #>  $ : num [1:3(1d)] 0.365 0.643 1.576 #>  $ : num [1:3(1d)] 0.402 0.652 1.593 #>  $ : num [1:3(1d)] 0.468 0.896 1.693 #>  $ : num [1:3(1d)] 0.547 0.689 1.644 #>  $ : num [1:3(1d)] 0.523 0.654 1.579 #>  $ : num [1:3(1d)] 0.491 0.774 1.632 #>  $ : num [1:3(1d)] 0.634 0.629 1.645 #>  $ : num [1:3(1d)] 0.566 0.775 1.625 #>  $ : num [1:3(1d)] 0.453 0.597 1.685 #>  $ : num [1:3(1d)] 0.355 0.635 1.416 #>  $ : num [1:3(1d)] 0.282 0.608 1.492 #>  $ : num [1:3(1d)] 0.354 0.559 1.516 #>  $ : num [1:3(1d)] 0.275 0.583 1.553 #>  $ : num [1:3(1d)] 0.374 0.603 1.552 #>  $ : num [1:3(1d)] 0.552 0.878 1.763 #>  $ : num [1:3(1d)] 0.44 0.577 1.677 #>  $ : num [1:3(1d)] 0.48 0.799 1.535 #>  $ : num [1:3(1d)] 0.436 0.445 1.563 #>  $ : num [1:3(1d)] 0.362 0.531 1.555 #>  $ : num [1:3(1d)] 0.452 0.758 1.654 #>  $ : num [1:3(1d)] 0.512 0.642 1.633 #>  $ : num [1:3(1d)] 0.481 0.798 1.705 #>  $ : num [1:3(1d)] 0.415 0.547 1.552 #>  $ : num [1:3(1d)] 0.571 0.726 1.806 #>  $ : num [1:3(1d)] 0.457 0.655 1.495 #>  $ : num [1:3(1d)] 0.5 0.633 1.635 #>  $ : num [1:3(1d)] 0.402 0.758 1.666 #>  $ : num [1:3(1d)] 0.48 0.809 1.698 #>  $ : num [1:3(1d)] 0.339 0.757 1.517 #>  $ : num [1:3(1d)] 0.371 0.743 1.563 #>  $ : num [1:3(1d)] 0.5 0.75 1.53 #>  $ : num [1:3(1d)] 0.542 0.752 1.721 #>  $ : num [1:3(1d)] 0.467 0.738 1.703 #>  $ : num [1:3(1d)] 0.432 0.652 1.676 #>  $ : num [1:3(1d)] 0.583 0.883 1.629 #>  $ : num [1:3(1d)] 0.38 0.508 1.424 #>  $ : num [1:3(1d)] 0.543 0.833 1.74 #>  $ : num [1:3(1d)] 0.398 0.673 1.39 #>  $ : num [1:3(1d)] 0.604 0.709 1.562 #>  $ : num [1:3(1d)] 0.52 0.901 1.581 #>  $ : num [1:3(1d)] 0.524 0.734 1.534 #>  $ : num [1:3(1d)] 0.503 0.883 1.564 #>  $ : num [1:3(1d)] 0.502 0.671 1.618 #>  $ : num [1:3(1d)] 0.599 0.835 1.723 #>  $ : num [1:3(1d)] 0.461 0.736 1.65 #>  $ : num [1:3(1d)] 0.535 0.736 1.643 #>  $ : num [1:3(1d)] 0.5 0.662 1.543 #>   [list output truncated] post$E() |> str() #> List of 3000 #>  $ : num [1:30, 1:4] -1.62 -2.13 -3.78 -1.37 -2.9 ... #>  $ : num [1:30, 1:4] -0.34 -0.439 -3.138 -2.625 -1.887 ... #>  $ : num [1:30, 1:4] -1.31 -1.59 -3.44 -1.83 -1.73 ... #>  $ : num [1:30, 1:4] -0.852 -0.757 -2.589 -1.83 -2.185 ... #>  $ : num [1:30, 1:4] -1.753 -0.656 -3.35 -1.891 -1.983 ... #>  $ : num [1:30, 1:4] -1.632 -0.703 -3.208 -1.953 -2.077 ... #>  $ : num [1:30, 1:4] -1.51 -1.17 -3.35 -2.17 -2.1 ... #>  $ : num [1:30, 1:4] -0.0849 -1.1387 -3.2079 -1.9074 -3.2873 ... #>  $ : num [1:30, 1:4] -1.63 -1.11 -3.42 -1.89 -1.23 ... #>  $ : num [1:30, 1:4] -0.193 -1.402 -3.193 -1.739 -2.971 ... #>  $ : num [1:30, 1:4] -1.573 -0.826 -3.591 -1.695 -1.496 ... #>  $ : num [1:30, 1:4] -0.157 -1.466 -2.985 -1.906 -2.772 ... #>  $ : num [1:30, 1:4] -0.786 -1.094 -3.482 -1.621 -2.465 ... #>  $ : num [1:30, 1:4] -0.527 -1.304 -3.394 -2.155 -1.558 ... #>  $ : num [1:30, 1:4] -0.792 -0.818 -2.652 -1.843 -2.525 ... #>  $ : num [1:30, 1:4] -0.811 -1.492 -4.274 -1.906 -1.719 ... #>  $ : num [1:30, 1:4] -1.065 -0.883 -2.585 -1.942 -2.681 ... #>  $ : num [1:30, 1:4] -0.652 -1.522 -3.776 -1.736 -1.586 ... #>  $ : num [1:30, 1:4] -1.048 -0.819 -2.582 -1.849 -2.633 ... #>  $ : num [1:30, 1:4] -0.528 -1.13 -3.477 -1.372 -2.153 ... #>  $ : num [1:30, 1:4] -1.4 -1.43 -3.48 -2.1 -2.23 ... #>  $ : num [1:30, 1:4] -1.24 -1.28 -3.41 -1.96 -2.13 ... #>  $ : num [1:30, 1:4] -0.699 -1.128 -2.879 -1.731 -2.509 ... #>  $ : num [1:30, 1:4] -0.937 -1.29 -2.895 -1.98 -2.221 ... #>  $ : num [1:30, 1:4] -1 -1.4 -2.85 -1.3 -2.81 ... #>  $ : num [1:30, 1:4] -0.489 -1.135 -3.656 -2.497 -1.799 ... #>  $ : num [1:30, 1:4] -1.36 -1.29 -3.02 -1.3 -2.67 ... #>  $ : num [1:30, 1:4] -0.431 -1.475 -3.003 -1.933 -1.682 ... #>  $ : num [1:30, 1:4] -1.12 -1.07 -3.36 -1.67 -2.5 ... #>  $ : num [1:30, 1:4] -0.948 -1.397 -3.561 -2.184 -1.74 ... #>  $ : num [1:30, 1:4] -1.05 -1.16 -3.97 -1.8 -1.23 ... #>  $ : num [1:30, 1:4] -0.576 -1.415 -2.609 -1.414 -2.843 ... #>  $ : num [1:30, 1:4] -0.736 -0.946 -3.273 -2.348 -2.079 ... #>  $ : num [1:30, 1:4] -1.01 -1.26 -3.45 -1.2 -2.04 ... #>  $ : num [1:30, 1:4] -1.01 -1.32 -3.41 -1.34 -2.09 ... #>  $ : num [1:30, 1:4] -0.852 -1.328 -3.131 -1.122 -2.023 ... #>  $ : num [1:30, 1:4] -1.044 -0.834 -3.396 -2.381 -2.16 ... #>  $ : num [1:30, 1:4] -0.884 -1.537 -3.168 -1.299 -2.053 ... #>  $ : num [1:30, 1:4] -0.882 -0.858 -3.327 -2.155 -2.568 ... #>  $ : num [1:30, 1:4] -0.919 -1.587 -3.151 -1.552 -1.89 ... #>  $ : num [1:30, 1:4] -0.966 -0.919 -3.344 -2.199 -2.412 ... #>  $ : num [1:30, 1:4] -1.175 -0.737 -2.896 -2.225 -1.879 ... #>  $ : num [1:30, 1:4] -1.258 -0.639 -3.521 -2.097 -2.308 ... #>  $ : num [1:30, 1:4] -0.551 -1.863 -3.125 -1.701 -2.304 ... #>  $ : num [1:30, 1:4] -1.1 -1.18 -3.27 -2.11 -2.46 ... #>  $ : num [1:30, 1:4] -0.689 -0.39 -2.511 -1.562 -1.835 ... #>  $ : num [1:30, 1:4] -1.12 -2.07 -4.06 -1.98 -2.52 ... #>  $ : num [1:30, 1:4] -1.21 -1.18 -3.83 -2.03 -2.39 ... #>  $ : num [1:30, 1:4] -0.471 -1.546 -3.313 -1.748 -1.882 ... #>  $ : num [1:30, 1:4] -1.42 -1.29 -3.38 -2.29 -2.16 ... #>  $ : num [1:30, 1:4] -0.761 -1.201 -3.122 -1.752 -2.726 ... #>  $ : num [1:30, 1:4] -0.415 -1.098 -3.267 -1.766 -2.174 ... #>  $ : num [1:30, 1:4] -1.21 -1.15 -3.26 -1.82 -2.16 ... #>  $ : num [1:30, 1:4] -0.86 -1.49 -2.72 -1.55 -2.37 ... #>  $ : num [1:30, 1:4] -0.897 -0.696 -3.674 -2.119 -2.079 ... #>  $ : num [1:30, 1:4] -0.936 -1.317 -3.013 -1.321 -1.741 ... #>  $ : num [1:30, 1:4] -1.02 -1.83 -3.5 -1.8 -1.89 ... #>  $ : num [1:30, 1:4] -0.81 -0.55 -3.13 -1.81 -2.42 ... #>  $ : num [1:30, 1:4] -0.943 -1.859 -3.697 -1.793 -1.909 ... #>  $ : num [1:30, 1:4] -0.856 -1.275 -2.846 -2.051 -2.426 ... #>  $ : num [1:30, 1:4] -1.06 -1.28 -4.16 -1.61 -1.91 ... #>  $ : num [1:30, 1:4] -0.895 -0.452 -2.246 -2.261 -2.21 ... #>  $ : num [1:30, 1:4] -0.855 -0.785 -2.396 -2.369 -2.294 ... #>  $ : num [1:30, 1:4] -1.02 -1.62 -3.56 -1.99 -2.18 ... #>  $ : num [1:30, 1:4] -1.03 -1.29 -3.88 -2.09 -2.3 ... #>  $ : num [1:30, 1:4] -1.192 -0.736 -3.95 -2.238 -1.373 ... #>  $ : num [1:30, 1:4] -0.371 -1.472 -2.722 -1.459 -2.839 ... #>  $ : num [1:30, 1:4] -1.75 -1.17 -4.57 -2.23 -2.08 ... #>  $ : num [1:30, 1:4] -0.0985 -1.075 -2.1892 -1.629 -2.1368 ... #>  $ : num [1:30, 1:4] -1.67 -1.32 -4.33 -1.9 -2.09 ... #>  $ : num [1:30, 1:4] -0.695 -1.049 -3.883 -2.133 -2.194 ... #>  $ : num [1:30, 1:4] -1.2 -1.21 -2.56 -1.56 -2.83 ... #>  $ : num [1:30, 1:4] -0.627 -1.206 -4.051 -2.178 -1.558 ... #>  $ : num [1:30, 1:4] -1.26 -1.28 -2.6 -1.69 -3.04 ... #>  $ : num [1:30, 1:4] -0.737 -1.357 -3.313 -1.516 -2.517 ... #>  $ : num [1:30, 1:4] -0.727 -0.9 -3.1 -2.178 -1.733 ... #>  $ : num [1:30, 1:4] -1.25 -1.65 -3.69 -1.63 -2.74 ... #>  $ : num [1:30, 1:4] -0.408 -0.471 -2.732 -2.124 -1.831 ... #>  $ : num [1:30, 1:4] -0.145 -0.612 -3.008 -1.987 -1.943 ... #>  $ : num [1:30, 1:4] -1.11 -1.81 -3.88 -2.42 -1.82 ... #>  $ : num [1:30, 1:4] -0.986 -0.766 -3.086 -1.728 -2.304 ... #>  $ : num [1:30, 1:4] -1.005 -0.339 -2.91 -2.057 -1.562 ... #>  $ : num [1:30, 1:4] -0.548 -1.998 -3.48 -1.47 -2.708 ... #>  $ : num [1:30, 1:4] -1.257 -0.455 -3.175 -1.612 -1.371 ... #>  $ : num [1:30, 1:4] -0.609 -1.686 -3.241 -2.453 -2.318 ... #>  $ : num [1:30, 1:4] -0.427 -1.467 -3.321 -2.607 -2.519 ... #>  $ : num [1:30, 1:4] -1.31 -1.98 -3.25 -1.64 -2.56 ... #>  $ : num [1:30, 1:4] -0.659 -0.859 -3.117 -2.616 -1.913 ... #>  $ : num [1:30, 1:4] -1.33 -1.8 -3.34 -1.73 -2.4 ... #>  $ : num [1:30, 1:4] -1.07 -1.87 -3.26 -1.63 -2.2 ... #>  $ : num [1:30, 1:4] -1.33 -1.24 -3.41 -1.79 -2.02 ... #>  $ : num [1:30, 1:4] -0.601 -1.247 -3.394 -2.029 -2.559 ... #>  $ : num [1:30, 1:4] -1.21 -1.33 -3.3 -1.84 -1.94 ... #>  $ : num [1:30, 1:4] -0.685 -1.148 -3.481 -2.18 -2.494 ... #>  $ : num [1:30, 1:4] -0.777 -1.37 -3.54 -1.794 -1.966 ... #>  $ : num [1:30, 1:4] -1.456 -0.434 -3.003 -2.351 -1.941 ... #>  $ : num [1:30, 1:4] -1.11 -1.73 -3.38 -1.89 -3.52 ... #>  $ : num [1:30, 1:4] -0.789 -0.713 -3.335 -1.924 -1.157 ... #>  $ : num [1:30, 1:4] -0.971 -1.896 -3.284 -1.158 -3.029 ... #>   [list output truncated]"},{"path":"http://yongfu.name/stom/reference/get_cli_programs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get stom cmd programs — get_cli_programs","title":"Get stom cmd programs — get_cli_programs","text":"Get stom cmd programs","code":""},{"path":"http://yongfu.name/stom/reference/get_cli_programs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get stom cmd programs — get_cli_programs","text":"","code":"get_cli_programs(git_bash_path = T)"},{"path":"http://yongfu.name/stom/reference/get_cli_programs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get stom cmd programs — get_cli_programs","text":"","code":"get_cli_programs() #> [1] \"/C/Users/tomliao/AppData/Local/Programs/R/R-4.2.3/library/stom/cli/export_docs_pdf.R\" #> [2] \"/C/Users/tomliao/AppData/Local/Programs/R/R-4.2.3/library/stom/cli/extract_column.R\"  #> [3] \"/C/Users/tomliao/AppData/Local/Programs/R/R-4.2.3/library/stom/cli/pandoc_html.R\"     #> [4] \"/C/Users/tomliao/AppData/Local/Programs/R/R-4.2.3/library/stom/cli/pandoc_pdf.R\"      #> [5] \"/C/Users/tomliao/AppData/Local/Programs/R/R-4.2.3/library/stom/cli/pdf2img.R\"         #> [6] \"/C/Users/tomliao/AppData/Local/Programs/R/R-4.2.3/library/stom/cli/pdf2png.R\"         #> [7] \"/C/Users/tomliao/AppData/Local/Programs/R/R-4.2.3/library/stom/cli/pdf2svg.R\""},{"path":"http://yongfu.name/stom/reference/get_param_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameter info from simulation — get_param_info","title":"Get parameter info from simulation — get_param_info","text":"input list can nested arbitrary levels, long names last level matches used corresponding Stan model.","code":""},{"path":"http://yongfu.name/stom/reference/get_param_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameter info from simulation — get_param_info","text":"","code":"get_param_info(lst)"},{"path":"http://yongfu.name/stom/reference/get_param_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameter info from simulation — get_param_info","text":"lst List. list parameter values simulation. Refer system.file(\"cases\", \"treatment_dynamics\", \"2-varying-effect-model\", \"simulation.R\", package=\"stom\") data structure input. match structure sim_data()$params.","code":""},{"path":"http://yongfu.name/stom/reference/get_param_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameter info from simulation — get_param_info","text":"list parameters dimension info.","code":""},{"path":"http://yongfu.name/stom/reference/get_param_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameter info from simulation — get_param_info","text":"","code":"fp = system.file(\"cases\", \"treatment_dynamics\", \"1-simplified-normal-model\", \"simulation.R\", package=\"stom\") source(fp) d = sim_data() str(d$params) #> List of 7 #>  $ B_TE : num [1:3] 0.5 1 2 #>  $ B_ED : num 1.5 #>  $ B_AE : num 1 #>  $ B_AD : num 0.8 #>  $ E    : num [1:30, 1:4] -0.103 -1.087 -3.829 -2.032 -2.71 ... #>  $ I    : num [1:20] -3 -2.68 -2.37 -2.05 -1.74 ... #>  $ kappa: num [1:5] -2.4 -1.1 0 1.1 2.4 get_param_info(d$params) #> $B_TE #> $B_TE$cls #> [1] \"vector\" #>  #> $B_TE$dim #> [1] 3 #>  #>  #> $B_ED #> $B_ED$cls #> [1] \"vector\" #>  #> $B_ED$dim #> [1] 1 #>  #>  #> $B_AE #> $B_AE$cls #> [1] \"vector\" #>  #> $B_AE$dim #> [1] 1 #>  #>  #> $B_AD #> $B_AD$cls #> [1] \"vector\" #>  #> $B_AD$dim #> [1] 1 #>  #>  #> $E #> $E$cls #> [1] \"matrix\" #>  #> $E$dim #> [1] 30  4 #>  #>  #> $I #> $I$cls #> [1] \"vector\" #>  #> $I$dim #> [1] 20 #>  #>  #> $kappa #> $kappa$cls #> [1] \"vector\" #>  #> $kappa$dim #> [1] 5 #>  #>"},{"path":"http://yongfu.name/stom/reference/get_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Select/Filter parameters from precis/extract data frames — get_pars","title":"Select/Filter parameters from precis/extract data frames — get_pars","text":"Select/Filter parameters precis/extract data frames","code":""},{"path":"http://yongfu.name/stom/reference/get_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select/Filter parameters from precis/extract data frames — get_pars","text":"","code":"get_pars(d, pars)"},{"path":"http://yongfu.name/stom/reference/get_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select/Filter parameters from precis/extract data frames — get_pars","text":"d data frame. data frame returned stom::precis() stom::extract(). pars Character vector parameter names retrieve.","code":""},{"path":"http://yongfu.name/stom/reference/get_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select/Filter parameters from precis/extract data frames — get_pars","text":"subset data frame given parameters.","code":""},{"path":"http://yongfu.name/stom/reference/get_pars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select/Filter parameters from precis/extract data frames — get_pars","text":"","code":"fp = system.file(\"cases\", \"wine_network\", \"wine2_normal_first_level2.RDS\", package=\"stom\") m = readRDS(fp)  # Posterior summary data frame d = precis( m, depth=3 ) #> Warning: The draws object contained no variables with unreserved names. No summaries were computed. #> Warning: Unknown or uninitialised column: `variable`. #> Warning: Unknown or uninitialised column: `variable`. get_pars( d, c(\"Int\", \"Int_raw\") ) #> data frame with 0 columns and 0 rows  # Posterior sample data frame d = extract( m ) get_pars( d, \"Int, Int_raw\" ) #> # A tibble: 4,000 × 7 #>    `Int_raw[1]` `Int_raw[2]` `Int_raw[3]` `Int[1,1]` `Int[2,1]` `Int[1,2]` #>           <dbl>        <dbl>        <dbl>      <dbl>      <dbl>      <dbl> #>  1         1.59      -0.237          1.83       1.59       1.83    -0.237  #>  2         1.40      -0.600          1.74       1.40       1.74    -0.600  #>  3         1.85      -0.0834         1.89       1.85       1.89    -0.0834 #>  4         1.65      -0.370          2.05       1.65       2.05    -0.370  #>  5         1.58      -0.271          1.75       1.58       1.75    -0.271  #>  6         1.72      -0.146          2.02       1.72       2.02    -0.146  #>  7         1.78      -0.224          1.85       1.78       1.85    -0.224  #>  8         1.65      -0.0572         1.68       1.65       1.68    -0.0572 #>  9         1.60      -0.620          1.85       1.60       1.85    -0.620  #> 10         1.26      -0.644          1.62       1.26       1.62    -0.644  #> # ℹ 3,990 more rows #> # ℹ 1 more variable: `Int[2,2]` <dbl>  # Simulation list d = list(     params = list(         B_AE = 2,         E = matrix(0, 2, 2),         kappa = 1:5,         subj = list(             sigma_subj = 1:3,             Rho = matrix(1, 2, 2),             Alpha_TD = 1         )     ) ) get_pars(d, \"B_AE\") #> [1] 2 get_pars( d, \"kappa, Rho\" ) #> $kappa #> [1] 1 2 3 4 5 #>  #> $Rho #>      [,1] [,2] #> [1,]    1    1 #> [2,]    1    1 #>"},{"path":"http://yongfu.name/stom/reference/get_sim_param_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parameter information of a simulation — get_sim_param_info","title":"Get parameter information of a simulation — get_sim_param_info","text":"input list can nested arbitrary levels, long names last level matches used corresponding Stan model.","code":""},{"path":"http://yongfu.name/stom/reference/get_sim_param_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parameter information of a simulation — get_sim_param_info","text":"","code":"get_sim_param_info(lst)"},{"path":"http://yongfu.name/stom/reference/get_sim_param_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parameter information of a simulation — get_sim_param_info","text":"lst List. list parameter values simulation. Refer system.file(\"cases\", \"treatment_dynamics\", \"2-varying-effect-model\", \"simulation.R\", package=\"stom\") data structure input. match structure sim_data()$params.","code":""},{"path":"http://yongfu.name/stom/reference/get_sim_param_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parameter information of a simulation — get_sim_param_info","text":"list parameters dimension info.","code":""},{"path":"http://yongfu.name/stom/reference/get_sim_param_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parameter information of a simulation — get_sim_param_info","text":"","code":"fp = system.file(\"cases\", \"treatment_dynamics\", \"1-simplified-normal-model\", \"simulation.R\", package=\"stom\") source(fp) d = sim_data() str(d$params) #> List of 7 #>  $ B_TE : num [1:3] 0.5 1 2 #>  $ B_ED : num 1.5 #>  $ B_AE : num 1 #>  $ B_AD : num 0.8 #>  $ E    : num [1:30, 1:4] -0.103 -1.087 -3.829 -2.032 -2.71 ... #>  $ I    : num [1:20] -3 -2.68 -2.37 -2.05 -1.74 ... #>  $ kappa: num [1:5] -2.4 -1.1 0 1.1 2.4 get_sim_param_info(d$params) #> $B_TE #> $B_TE$cls #> [1] \"vector\" #>  #> $B_TE$dim #> [1] 3 #>  #>  #> $B_ED #> $B_ED$cls #> [1] \"vector\" #>  #> $B_ED$dim #> [1] 1 #>  #>  #> $B_AE #> $B_AE$cls #> [1] \"vector\" #>  #> $B_AE$dim #> [1] 1 #>  #>  #> $B_AD #> $B_AD$cls #> [1] \"vector\" #>  #> $B_AD$dim #> [1] 1 #>  #>  #> $E #> $E$cls #> [1] \"matrix\" #>  #> $E$dim #> [1] 30  4 #>  #>  #> $I #> $I$cls #> [1] \"vector\" #>  #> $I$dim #> [1] 20 #>  #>  #> $kappa #> $kappa$cls #> [1] \"vector\" #>  #> $kappa$dim #> [1] 5 #>  #>"},{"path":"http://yongfu.name/stom/reference/get_stan_param_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer parameter data structure from Stan's parameter names — get_stan_param_info","title":"Infer parameter data structure from Stan's parameter names — get_stan_param_info","text":"function used stom::extract2() inferring parameter structure Stan model outputs.","code":""},{"path":"http://yongfu.name/stom/reference/get_stan_param_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer parameter data structure from Stan's parameter names — get_stan_param_info","text":"","code":"get_stan_param_info(params)"},{"path":"http://yongfu.name/stom/reference/get_stan_param_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer parameter data structure from Stan's parameter names — get_stan_param_info","text":"params Character. vector parameter names pass .","code":""},{"path":"http://yongfu.name/stom/reference/get_stan_param_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer parameter data structure from Stan's parameter names — get_stan_param_info","text":"list parameters, matching input order, data structure information.","code":""},{"path":"http://yongfu.name/stom/reference/get_stan_param_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Infer parameter data structure from Stan's parameter names — get_stan_param_info","text":"","code":"p_scalar = c( \"alpha\", \"beta\" ) p_1d = c( \"x[1]\", \"x[2]\" ) p_2d = c(\"y[1,1]\", \"y[2,1]\", \"y[1,2]\", \"y[2,2]\") p_3d = c(\"z[1,1,1]\", \"z[2,1,1]\", \"z[1,2,1]\", \"z[2,2,1]\", \"z[1,1,2]\", \"z[2,1,2]\", \"z[1,2,2]\", \"z[2,2,2]\") params = c( p_scalar, p_1d, p_2d, p_3d ) get_stan_param_info(params) #> Error in get_stan_param_info(params): could not find function \"get_stan_param_info\""},{"path":"http://yongfu.name/stom/reference/ignore_dollars_with_begin_equation.html","id":null,"dir":"Reference","previous_headings":"","what":"Spcial function to deal with conflicts between $$ and equation env in latex — ignore_dollars_with_begin_equation","title":"Spcial function to deal with conflicts between $$ and equation env in latex — ignore_dollars_with_begin_equation","text":"Spcial function deal conflicts $$ equation env latex","code":""},{"path":"http://yongfu.name/stom/reference/ignore_dollars_with_begin_equation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spcial function to deal with conflicts between $$ and equation env in latex — ignore_dollars_with_begin_equation","text":"","code":"ignore_dollars_with_begin_equation(lines)"},{"path":"http://yongfu.name/stom/reference/inkscape_pdf_pager.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct output file paths based on input PDF page numbers — inkscape_pdf_pager","title":"Construct output file paths based on input PDF page numbers — inkscape_pdf_pager","text":"Construct output file paths based input PDF page numbers","code":""},{"path":"http://yongfu.name/stom/reference/inkscape_pdf_pager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct output file paths based on input PDF page numbers — inkscape_pdf_pager","text":"","code":"inkscape_pdf_pager(pdf_file, to_ext = \".svg\", outfile = NULL, page = NULL)"},{"path":"http://yongfu.name/stom/reference/inkscape_run_through_pages.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Inkscape through pages of PDF input, where page info is given by the out_info arg obtained through inkscape_pdf_pager() — inkscape_run_through_pages","title":"Run Inkscape through pages of PDF input, where page info is given by the out_info arg obtained through inkscape_pdf_pager() — inkscape_run_through_pages","text":"Run Inkscape pages PDF input, page info given out_info arg obtained inkscape_pdf_pager()","code":""},{"path":"http://yongfu.name/stom/reference/inkscape_run_through_pages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Inkscape through pages of PDF input, where page info is given by the out_info arg obtained through inkscape_pdf_pager() — inkscape_run_through_pages","text":"","code":"inkscape_run_through_pages(infile, base_cmd, out_info)"},{"path":"http://yongfu.name/stom/reference/inline.html","id":null,"dir":"Reference","previous_headings":"","what":"Format vectors as inline text — inline","title":"Format vectors as inline text — inline","text":"functions expect work R Markdown's inline R chunk syntax `r `, , instance, numbered `r inline(1:3)` respectively results numbered 1, 2, 3 respectively.","code":""},{"path":"http://yongfu.name/stom/reference/inline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format vectors as inline text — inline","text":"","code":"inline(x, sep = \", \", last_sep = \", and \", two_sep = \" and \")  inline_zh(x, sep = \"、\", last_sep = \"、\", two_sep = \" 與 \")"},{"path":"http://yongfu.name/stom/reference/inline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format vectors as inline text — inline","text":"","code":"inline(1:2) #> [1] \"1 and 2\" inline(1:3) #> [1] \"1, 2, and 3\" inline_zh(1:2) #> [1] \"1 與 2\" inline_zh(1:3) #> [1] \"1、2、3\""},{"path":"http://yongfu.name/stom/reference/logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Links and Inverse Links for Logistic Regression — logit","title":"Links and Inverse Links for Logistic Regression — logit","text":"Links Inverse Links Logistic Regression","code":""},{"path":"http://yongfu.name/stom/reference/logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Links and Inverse Links for Logistic Regression — logit","text":"","code":"logit(p)  inv_logit(x)  logistic(x)"},{"path":"http://yongfu.name/stom/reference/logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Links and Inverse Links for Logistic Regression — logit","text":"p Numeric vector. Values probability scale. x Numeric vector. Values linear scale.","code":""},{"path":"http://yongfu.name/stom/reference/lst2message.html","id":null,"dir":"Reference","previous_headings":"","what":"Print named lists as formatted messages — lst2message","title":"Print named lists as formatted messages — lst2message","text":"Print named lists formatted messages","code":""},{"path":"http://yongfu.name/stom/reference/lst2message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print named lists as formatted messages — lst2message","text":"","code":"lst2message(lst, indent = 0L, message = T, item_sep = \"\\n\")"},{"path":"http://yongfu.name/stom/reference/lst2message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print named lists as formatted messages — lst2message","text":"lst list. Input printed. indent Integer. number spaces padded left output. message Logical. Whether print input message. Defaults TRUE. FALSE, returns character vector formatted content. item_sep string. separator list elements. Defaults \\n. name description","code":""},{"path":"http://yongfu.name/stom/reference/lst2message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print named lists as formatted messages — lst2message","text":"","code":"lst2message(list(xyz = 1, xy = 2:3)) #> xyz: 1 #> xy : 2 #>      3 message(\"[Message]\") #> [Message] #' lst2message(list(xyz = 1, xy = 2:3), indent=3) lst2message(list(xyz = 1, xy = 2:3), message=F) #> [1] \"xyz: 1\\nxy : 2\\n     3\""},{"path":"http://yongfu.name/stom/reference/n_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Get number of samples (chains combined) from CmdStanFit — n_samples","title":"Get number of samples (chains combined) from CmdStanFit — n_samples","text":"Get number samples (chains combined) CmdStanFit","code":""},{"path":"http://yongfu.name/stom/reference/n_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get number of samples (chains combined) from CmdStanFit — n_samples","text":"","code":"n_samples(fit)"},{"path":"http://yongfu.name/stom/reference/n_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get number of samples (chains combined) from CmdStanFit — n_samples","text":"fit CmdStanFit object.","code":""},{"path":"http://yongfu.name/stom/reference/n_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get number of samples (chains combined) from CmdStanFit — n_samples","text":"Integer","code":""},{"path":"http://yongfu.name/stom/reference/pandoc_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Pandoc wrappers for converting markdown to pre-styled documents — pandoc_pdf","title":"Pandoc wrappers for converting markdown to pre-styled documents — pandoc_pdf","text":"Pandoc wrappers converting markdown pre-styled documents","code":""},{"path":"http://yongfu.name/stom/reference/pandoc_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pandoc wrappers for converting markdown to pre-styled documents — pandoc_pdf","text":"","code":"pandoc_pdf(fin, outfp, style = \"amsart\", ...)  pandoc_html(fin, outfp, args = NULL, style = NULL)"},{"path":"http://yongfu.name/stom/reference/par2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get graphical parameters — par2","title":"Get graphical parameters — par2","text":"Get graphical parameters","code":""},{"path":"http://yongfu.name/stom/reference/par2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get graphical parameters — par2","text":"","code":"par2(x, ...)"},{"path":"http://yongfu.name/stom/reference/par2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get graphical parameters — par2","text":"x Parameter name.","code":""},{"path":"http://yongfu.name/stom/reference/par2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get graphical parameters — par2","text":"","code":"par2(\"mar\") #>   b   l   t   r  #> 5.1 4.1 4.1 2.1  par2(\"omi\") #> b l t r  #> 0 0 0 0"},{"path":"http://yongfu.name/stom/reference/pat_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Stan parameter regex pattern — pat_depth","title":"Stan parameter regex pattern — pat_depth","text":"Stan parameter regex pattern","code":""},{"path":"http://yongfu.name/stom/reference/pat_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stan parameter regex pattern — pat_depth","text":"","code":"pat_depth(depth = 1)"},{"path":"http://yongfu.name/stom/reference/pat_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stan parameter regex pattern — pat_depth","text":"depth Integer. parameters' dimension number. Parameters dimension number equal less depth retrieved.","code":""},{"path":"http://yongfu.name/stom/reference/pat_depth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stan parameter regex pattern — pat_depth","text":"","code":"pat_depth(0) #> Error in pat_depth(0): could not find function \"pat_depth\" pat_depth(1) #> Error in pat_depth(1): could not find function \"pat_depth\" pat_depth(2) #> Error in pat_depth(2): could not find function \"pat_depth\" grepl( pat_depth(0), c(\"a\", \"a[1]\", \"a[1,2]\", \"a[1,2,3]\") ) #> Error in pat_depth(0): could not find function \"pat_depth\" grepl( pat_depth(2), c(\"a\", \"a[1]\", \"a[1,2]\", \"a[1,2,3]\") ) #> Error in pat_depth(2): could not find function \"pat_depth\""},{"path":"http://yongfu.name/stom/reference/pdf2png.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector graphics conversion — pdf2png","title":"Vector graphics conversion — pdf2png","text":"Convert PDF/SVG file images formats Inkscape.","code":""},{"path":"http://yongfu.name/stom/reference/pdf2png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector graphics conversion — pdf2png","text":"","code":"pdf2png(infile, outfile = NULL, page = NULL, dpi = 1200, white = FALSE)  pdf2svg(infile, outfile = NULL, page = NULL, white = FALSE)  svg2pdf(infile, outfile = NULL)  svg2png(infile, outfile = NULL, dpi = 1200)"},{"path":"http://yongfu.name/stom/reference/pdf2png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector graphics conversion — pdf2png","text":"infile String. Path input PDF file. outfile Character vector. Output file paths without file extensions. File extensions set .png *2png(); .svg pdf2svg(); .pdf svg2pdf(). length outfile 1 corresponds length page. mismatch, first element outfile taken file stem, page numbers appended file stem suffixes. default, outfile set NULL, input PDF file stem used. page Integer vector. pages (starting 1) extract PDF file, defaults NULL, every page converted image. dpi Integer. \"Dots Per Inch\" PNG outputs pdf2png().","code":""},{"path":"http://yongfu.name/stom/reference/pdf2png.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vector graphics conversion — pdf2png","text":"use function, inkscape available command line. Alternatively, users can specify absolute path inkscape option stom.inkscape (e.g., options(stom.inkscape = \"/home/stom/bin/inkscape\")).","code":""},{"path":"http://yongfu.name/stom/reference/pdf2png.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector graphics conversion — pdf2png","text":"","code":"if (FALSE) { infile = system.file(\"inkscape\", \"dag.pdf\", package = \"stom\") pdf2svg( infile, outfile=\"dag.svg\" ) pdf2png( infile, outfile=\"dag.png\", dpi=800 ) svg2pdf( \"dag.svg\", \"dag2.pdf\" ) svg2png( \"dag.svg\", \"dag2.png\" ) }"},{"path":"http://yongfu.name/stom/reference/plot_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Forest plot for multiple densities — plot_forest","title":"Forest plot for multiple densities — plot_forest","text":"Forest plot multiple densities","code":""},{"path":"http://yongfu.name/stom/reference/plot_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forest plot for multiple densities — plot_forest","text":"","code":"plot_forest(   dat,   labels,   shade_inv = c(0.25, 0.75),   center = c(\"mean\", \"median\", \"mode\"),   decreasing = FALSE,   vert_ref = NULL,   col = 2,   xlim = NULL,   sep_fct = 0.5,   adj = -0,   ... )"},{"path":"http://yongfu.name/stom/reference/plot_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forest plot for multiple densities — plot_forest","text":"dat list numeric vectors representing set observations distribution. labels Character vector. Labels plotted y-axis. shade_inv Numeric vector length 2. central area shaded distributions default, central 50% regions shaded. Set shade_inv NULL disable shading. center String. statistic used drawing central tendency line. Defaults mean. decreasing Logical. Whether decreasingly sort distributions according central tendency measures. NULL, distributions arranged according order passed . vert_ref Numeric. position vertical reference line. NULL, nothing plotted. col Integer String. color code recognized base R. Determines color central tendency lines shaded regions. xlim Numeric. vector length 2 giving plotted x range. sep_fct, adj Parameters tweak positions distributions. sep_fct changes distances pair distributions. adj shifts baselines distributions, positive values shifting upwards negative values downwards. ... Additional arguments passed main plot() function.","code":""},{"path":"http://yongfu.name/stom/reference/plot_forest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forest plot for multiple densities — plot_forest","text":"","code":"# Set up the data set.seed(100) A <- rnorm(1e6,   0, 1.5) B <- rnorm(1e6,   1, 1.5) C <- rnorm(1e6,  -1, 1.2) D <- rnorm(1e6, 1.5, 1.8)  plot_forest(list(A,B,C,D), labels=LETTERS[1:4],             vert_ref = 0, center=\"mode\", xlim=c(-8,8),             main = \"A comparision of 4 normal distributions\")"},{"path":"http://yongfu.name/stom/reference/precis.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior summary and extraction from CmdStanFit objects — precis","title":"Posterior summary and extraction from CmdStanFit objects — precis","text":"Posterior summary extraction CmdStanFit objects","code":""},{"path":"http://yongfu.name/stom/reference/precis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior summary and extraction from CmdStanFit objects — precis","text":"","code":"precis(fit, depth = 1, pars = NULL, lp = F)  extract(fit, pars = NULL, lp = F, chains = NULL)  erect(d, pars, col = \"mean\")"},{"path":"http://yongfu.name/stom/reference/precis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior summary and extraction from CmdStanFit objects — precis","text":"fit CmdStanFit object. depth Integer. level parameters display. 0 scalar; 1 scalar vector; 2 scalar, vector, matrix; . pars Character vector. Names variables include. Passed variables argument cmdstanr's $summary()/$draws(). lp Boolean. Whether include log probabilities output. chains Integer vector. Chains extract. default, NULL, extracts chains. d data frame. Posterior summary data frame returned precis().","code":""},{"path":"http://yongfu.name/stom/reference/precis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior summary and extraction from CmdStanFit objects — precis","text":"data frame","code":""},{"path":"http://yongfu.name/stom/reference/precis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior summary and extraction from CmdStanFit objects — precis","text":"","code":"# Fitted model fp = system.file(\"cases\", \"wine_network\", \"wine2_normal_first_level2.RDS\", package=\"stom\") m = readRDS(fp)  # Posterior distribution summary d = precis( m, depth=2, pars=\"Int,J\" )  # or pars=c(\"Int\", \"J\") d #>    variable        mean        sd         q5        q95     rhat  ess_bulk #> 1  Int[1,1]  1.46065860 0.4155012  0.7738191  2.1368475 1.005829  596.2273 #> 2  Int[2,1]  1.60776153 0.3527793  1.0167770  2.1725515 1.004828  638.9929 #> 3  Int[1,2] -0.29323172 0.4002178 -0.9390186  0.3660294 1.007534  626.0339 #> 4  Int[2,2]  0.00000000 0.0000000  0.0000000  0.0000000       NA        NA #> 5      J[1] -0.38478502 0.3799942 -0.9994123  0.2432264 1.005196  698.6300 #> 6      J[2]  1.40204140 0.3881811  0.7713947  2.0574410 1.005678  695.9941 #> 7      J[3]  0.17605415 0.3844786 -0.4439989  0.7984256 1.003867  725.7951 #> 8      J[4]  0.34203082 0.3874797 -0.2701835  0.9911882 1.004315  701.5242 #> 9      J[5] -0.25537684 0.3860228 -0.8714625  0.3889210 1.003792  695.2089 #> 10     J[6] -0.40992786 0.3827055 -1.0339180  0.2290665 1.004490  725.9601 #> 11     J[7]  0.46396758 0.3829940 -0.1486301  1.1153265 1.004482  719.1779 #> 12     J[8] -1.51783270 0.2867946 -1.9874985 -1.0400635 1.005495 1012.9021 #> 13     J[9] -0.94599734 0.2874214 -1.4051815 -0.4679022 1.007909 1066.7047 #> 14    J[10]  0.74630456 0.2868925  0.2910840  1.2200405 1.006798  978.7118 #> 15    J[11] -1.10221230 0.2873724 -1.5657620 -0.6261724 1.004553 1087.6786 #> 16    J[12]  1.80909484 0.2842524  1.3477965  2.2772970 1.005867 1017.2190 #> 17    J[13]  0.06987397 0.2781449 -0.3794031  0.5328615 1.006137  983.5072 #> 18    J[14]  0.24525450 0.2882109 -0.2209305  0.7204153 1.008201  998.5836 #>    ess_tail #> 1  1065.814 #> 2  1114.637 #> 3  1156.876 #> 4        NA #> 5  1139.062 #> 6  1036.491 #> 7  1349.344 #> 8  1194.978 #> 9  1208.398 #> 10 1255.918 #> 11 1295.044 #> 12 1396.113 #> 13 1753.447 #> 14 1810.974 #> 15 1557.702 #> 16 1730.892 #> 17 1329.687 #> 18 1487.189  # Reconstruct high-dimensional data structure from posterior means erect( d, \"Int\" ) #>          [,1]       [,2] #> [1,] 1.460659 -0.2932317 #> [2,] 1.607762  0.0000000 erect( d, \"Int\", \"sd\" ) #>           [,1]      [,2] #> [1,] 0.4155012 0.4002178 #> [2,] 0.3527793 0.0000000 erect( d, \"Int,J\" ) #> $Int #>          [,1]       [,2] #> [1,] 1.460659 -0.2932317 #> [2,] 1.607762  0.0000000 #>  #> $J #>  [1] -0.38478502  1.40204140  0.17605415  0.34203082 -0.25537684 -0.40992786 #>  [7]  0.46396758 -1.51783270 -0.94599734  0.74630456 -1.10221230  1.80909484 #> [13]  0.06987397  0.24525450 #>   # Extract posterior samples post = extract(m) str(post) #> draws_df [4,000 × 92] (S3: draws_df/draws/tbl_df/tbl/data.frame) #>  $ Int_raw[1]: num [1:4000] 1.59 1.4 1.85 1.65 1.58 ... #>  $ Int_raw[2]: num [1:4000] -0.2375 -0.6001 -0.0834 -0.37 -0.2706 ... #>  $ Int_raw[3]: num [1:4000] 1.83 1.74 1.89 2.05 1.75 ... #>  $ zJ[1]     : num [1:4000] -0.754 -0.637 -0.46 0.112 -0.142 ... #>  $ zJ[2]     : num [1:4000] 0.584 0.972 1.64 1.944 1.94 ... #>  $ zJ[3]     : num [1:4000] -0.1859 0.0664 0.2757 0.491 0.8079 ... #>  $ zJ[4]     : num [1:4000] 0.0275 0.2999 0.6461 0.5709 0.8344 ... #>  $ zJ[5]     : num [1:4000] -0.416 -0.455 -0.332 -0.104 -0.49 ... #>  $ zJ[6]     : num [1:4000] -0.7102 -0.4128 -0.2841 -0.4882 -0.0785 ... #>  $ zJ[7]     : num [1:4000] 0.0724 0.3601 1.0988 1.3 0.871 ... #>  $ zJ[8]     : num [1:4000] -1.62 -1.78 -1.8 -1.55 -1.38 ... #>  $ zJ[9]     : num [1:4000] -1.329 -1.167 -0.819 -1.125 -1.291 ... #>  $ zJ[10]    : num [1:4000] 0.237 0.323 1.166 0.786 0.43 ... #>  $ zJ[11]    : num [1:4000] -1.13 -1.55 -1.55 -1.27 -1.3 ... #>  $ zJ[12]    : num [1:4000] 1 1.39 2.54 2.67 2.8 ... #>  $ zJ[13]    : num [1:4000] -0.25 0.0125 0.0777 0.066 0.3985 ... #>  $ zJ[14]    : num [1:4000] -0.226 -0.21 0.634 0.621 0.455 ... #>  $ zW[1]     : num [1:4000] -0.0158 -0.1981 -0.8422 -0.6991 -0.8114 ... #>  $ zW[2]     : num [1:4000] -0.0842 0.4905 -0.3685 -0.663 -0.4034 ... #>  $ zW[3]     : num [1:4000] -1.25 -0.566 -1.707 -1.705 -1.793 ... #>  $ zW[4]     : num [1:4000] 1.531 1.186 0.578 0.292 0.592 ... #>  $ zW[5]     : num [1:4000] 0.315 -0.143 -0.885 -0.956 -1.06 ... #>  $ zW[6]     : num [1:4000] 1.04567 0.67864 0.00414 -0.22782 0.07864 ... #>  $ zW[7]     : num [1:4000] 0.8674 0.777 -0.0235 0.146 0.233 ... #>  $ zW[8]     : num [1:4000] 0.89 0.589 -0.226 -0.468 -0.247 ... #>  $ zW[9]     : num [1:4000] 1.332 1.1 0.478 0.552 0.387 ... #>  $ zW[10]    : num [1:4000] 0.297 0.385 -0.359 -0.206 -0.162 ... #>  $ zW[11]    : num [1:4000] -0.328 -0.204 -0.569 -1.11 -0.847 ... #>  $ zW[12]    : num [1:4000] 0.94 1.198 0.68 0.861 1.008 ... #>  $ zW[13]    : num [1:4000] 0.8707 0.7284 0.0419 0.1579 0.5282 ... #>  $ zW[14]    : num [1:4000] -0.752 -0.951 -1.812 -2.244 -1.951 ... #>  $ zW[15]    : num [1:4000] -0.00293 -0.26146 -1.0109 -1.29183 -1.16576 ... #>  $ zW[16]    : num [1:4000] -1.77 -1.06 -2.53 -2.45 -2.13 ... #>  $ zW[17]    : num [1:4000] 1.991 2.027 1.453 1.367 0.845 ... #>  $ zW[18]    : num [1:4000] 2.03 1.75 1.6 1.71 1.81 ... #>  $ zW[19]    : num [1:4000] 1.67 1.83 1.41 1.48 1.34 ... #>  $ zW[20]    : num [1:4000] 0.0272 0.3317 -0.3306 -0.2045 -0.3151 ... #>  $ zW[21]    : num [1:4000] 0.3112 0.0807 -0.662 -0.5965 -0.4068 ... #>  $ zW[22]    : num [1:4000] 1.3 1.325 0.347 0.343 0.292 ... #>  $ zW[23]    : num [1:4000] -0.664 -1.147 -1.508 -1.979 -1.867 ... #>  $ zW[24]    : num [1:4000] -1.04 -1.52 -2.15 -2.21 -1.73 ... #>  $ zW[25]    : num [1:4000] -0.293 -0.249 -1.054 -0.784 -0.626 ... #>  $ zW[26]    : num [1:4000] 0.318 0.414 -0.243 -0.336 -0.391 ... #>  $ sigma_J   : num [1:4000] 1.247 1.131 0.775 0.769 0.785 ... #>  $ sigma_W   : num [1:4000] 0.999 0.944 0.871 0.806 0.724 ... #>  $ Int[1,1]  : num [1:4000] 1.59 1.4 1.85 1.65 1.58 ... #>  $ Int[2,1]  : num [1:4000] 1.83 1.74 1.89 2.05 1.75 ... #>  $ Int[1,2]  : num [1:4000] -0.2375 -0.6001 -0.0834 -0.37 -0.2706 ... #>  $ Int[2,2]  : num [1:4000] 0 0 0 0 0 0 0 0 0 0 ... #>  $ J[1]      : num [1:4000] -0.9396 -0.7205 -0.3567 0.0858 -0.1114 ... #>  $ J[2]      : num [1:4000] 0.729 1.099 1.271 1.494 1.522 ... #>  $ J[3]      : num [1:4000] -0.2317 0.0751 0.2137 0.3774 0.6341 ... #>  $ J[4]      : num [1:4000] 0.0343 0.3392 0.5008 0.4388 0.6549 ... #>  $ J[5]      : num [1:4000] -0.518 -0.514 -0.258 -0.08 -0.385 ... #>  $ J[6]      : num [1:4000] -0.8853 -0.4669 -0.2202 -0.3753 -0.0616 ... #>  $ J[7]      : num [1:4000] 0.0902 0.4072 0.8518 0.9992 0.6837 ... #>  $ J[8]      : num [1:4000] -2.02 -2.02 -1.4 -1.19 -1.08 ... #>  $ J[9]      : num [1:4000] -1.657 -1.32 -0.635 -0.864 -1.013 ... #>  $ J[10]     : num [1:4000] 0.295 0.365 0.904 0.604 0.338 ... #>  $ J[11]     : num [1:4000] -1.403 -1.748 -1.201 -0.978 -1.018 ... #>  $ J[12]     : num [1:4000] 1.25 1.57 1.97 2.06 2.2 ... #>  $ J[13]     : num [1:4000] -0.3117 0.0141 0.0603 0.0507 0.3128 ... #>  $ J[14]     : num [1:4000] -0.281 -0.238 0.491 0.478 0.357 ... #>  $ W[1]      : num [1:4000] -0.0158 -0.187 -0.734 -0.5636 -0.5874 ... #>  $ W[2]      : num [1:4000] -0.0841 0.463 -0.3212 -0.5345 -0.292 ... #>  $ W[3]      : num [1:4000] -1.248 -0.534 -1.488 -1.374 -1.298 ... #>  $ W[4]      : num [1:4000] 1.529 1.119 0.504 0.235 0.429 ... #>  $ W[5]      : num [1:4000] 0.314 -0.135 -0.771 -0.771 -0.768 ... #>  $ W[6]      : num [1:4000] 1.04423 0.64068 0.00361 -0.18366 0.05693 ... #>  $ W[7]      : num [1:4000] 0.8662 0.7335 -0.0205 0.1177 0.1687 ... #>  $ W[8]      : num [1:4000] 0.889 0.556 -0.197 -0.377 -0.179 ... #>  $ W[9]      : num [1:4000] 1.33 1.038 0.416 0.445 0.28 ... #>  $ W[10]     : num [1:4000] 0.297 0.364 -0.313 -0.166 -0.117 ... #>  $ W[11]     : num [1:4000] -0.327 -0.192 -0.496 -0.895 -0.613 ... #>  $ W[12]     : num [1:4000] 0.939 1.131 0.593 0.694 0.73 ... #>  $ W[13]     : num [1:4000] 0.8695 0.6877 0.0365 0.1273 0.3824 ... #>  $ W[14]     : num [1:4000] -0.751 -0.898 -1.579 -1.809 -1.412 ... #>  $ W[15]     : num [1:4000] -0.00292 -0.24683 -0.88096 -1.04147 -0.84397 ... #>  $ W[16]     : num [1:4000] -1.77 -1 -2.21 -1.97 -1.54 ... #>  $ W[17]     : num [1:4000] 1.988 1.913 1.266 1.102 0.612 ... #>  $ W[18]     : num [1:4000] 2.03 1.65 1.4 1.38 1.31 ... #>  $ W[19]     : num [1:4000] 1.664 1.73 1.233 1.194 0.969 ... #>  $ W[20]     : num [1:4000] 0.0272 0.3132 -0.2881 -0.1649 -0.2281 ... #>  $ W[21]     : num [1:4000] 0.3107 0.0762 -0.5769 -0.4809 -0.2945 ... #>  $ W[22]     : num [1:4000] 1.298 1.25 0.303 0.276 0.211 ... #>  $ W[23]     : num [1:4000] -0.664 -1.083 -1.314 -1.595 -1.352 ... #>  $ W[24]     : num [1:4000] -1.04 -1.43 -1.87 -1.78 -1.25 ... #>  $ W[25]     : num [1:4000] -0.293 -0.235 -0.918 -0.632 -0.453 ... #>  $ W[26]     : num [1:4000] 0.318 0.391 -0.212 -0.271 -0.283 ... #>  $ .chain    : int [1:4000] 1 1 1 1 1 1 1 1 1 1 ... #>  $ .iteration: int [1:4000] 1 2 3 4 5 6 7 8 9 10 ... #>  $ .draw     : int [1:4000] 1 2 3 4 5 6 7 8 9 10 ..."},{"path":"http://yongfu.name/stom/reference/prepare_drive_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Gather Stan models for Google Drive upload — prepare_drive_model","title":"Gather Stan models for Google Drive upload — prepare_drive_model","text":"Gather Stan models Google Drive upload","code":""},{"path":"http://yongfu.name/stom/reference/prepare_drive_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gather Stan models for Google Drive upload — prepare_drive_model","text":"","code":"prepare_drive_model()"},{"path":[]},{"path":"http://yongfu.name/stom/reference/rbern.html","id":null,"dir":"Reference","previous_headings":"","what":"Bernoulli Random Number Generator — rbern","title":"Bernoulli Random Number Generator — rbern","text":"Alias rbinom() single trial (size = 1).","code":""},{"path":"http://yongfu.name/stom/reference/rbern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bernoulli Random Number Generator — rbern","text":"","code":"rbern(prob, n = length(prob))"},{"path":"http://yongfu.name/stom/reference/rbern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bernoulli Random Number Generator — rbern","text":"prob Vector probabilities. n Numbers sample, defaults length prob.","code":""},{"path":"http://yongfu.name/stom/reference/replace_file_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace file extension — replace_file_ext","title":"Replace file extension — replace_file_ext","text":"Replace file extension","code":""},{"path":"http://yongfu.name/stom/reference/replace_file_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace file extension — replace_file_ext","text":"","code":"replace_file_ext(fp, ext = \"\")"},{"path":"http://yongfu.name/stom/reference/replace_file_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace file extension — replace_file_ext","text":"fp Character vector file paths. ext String. Extension (dot) change .","code":""},{"path":"http://yongfu.name/stom/reference/replace_file_ext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace file extension — replace_file_ext","text":"","code":"replace_file_ext(\"x/y/zcda.txt\") #> [1] \"x/y/zcda\" replace_file_ext(paste0(1:3, \".txt\"), \".stan\") #> [1] \"1.stan\" \"2.stan\" \"3.stan\""},{"path":"http://yongfu.name/stom/reference/rordlogit.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Number Generator from Ordered Logit Distribution — rordlogit","title":"Random Number Generator from Ordered Logit Distribution — rordlogit","text":"Random Number Generator Ordered Logit Distribution","code":""},{"path":"http://yongfu.name/stom/reference/rordlogit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Number Generator from Ordered Logit Distribution — rordlogit","text":"","code":"rordlogit(phi, kappa)"},{"path":"http://yongfu.name/stom/reference/rordlogit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Number Generator from Ordered Logit Distribution — rordlogit","text":"phi Numeric. linear term(s) subtract ordered categories. kappa vector cut-points delineating ordered categories logit scale. generating n categories, n-1 cut-points needed. include (negative) Inf values.","code":""},{"path":"http://yongfu.name/stom/reference/rordlogit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Number Generator from Ordered Logit Distribution — rordlogit","text":"","code":"kappa = c( -1.5, 0, 1.5 ) rordlogit( phi=0, kappa=kappa ) #> [1] 4 x = replicate( 1e4, {rordlogit(0, kappa)}) table(x) / length(x) #> x #>      1      2      3      4  #> 0.1805 0.3054 0.3236 0.1905  logistic( c(kappa, Inf) ) - logistic( c(-Inf, kappa) ) #> [1] 0.1824255 0.3175745 0.3175745 0.1824255"},{"path":"http://yongfu.name/stom/reference/rtnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Number Generator for Truncated Normal Distribution — rtnorm","title":"Random Number Generator for Truncated Normal Distribution — rtnorm","text":"parameters set generate numbers half-normal distribution default.","code":""},{"path":"http://yongfu.name/stom/reference/rtnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Number Generator for Truncated Normal Distribution — rtnorm","text":"","code":"rtnorm(n, m = 0, s = 1, lower = 0, upper = Inf)"},{"path":"http://yongfu.name/stom/reference/rtnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Number Generator for Truncated Normal Distribution — rtnorm","text":"n Numbers sample. m mean untruncated normal distribution. s standard deviation untruncated normal distribution. lower lower bound truncation. upper upper bound truncation.","code":""},{"path":"http://yongfu.name/stom/reference/save_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Save CmdStanFit object as RDS with a cross-platform consistent name — save_model","title":"Save CmdStanFit object as RDS with a cross-platform consistent name — save_model","text":"Save CmdStanFit object RDS cross-platform consistent name","code":""},{"path":"http://yongfu.name/stom/reference/save_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save CmdStanFit object as RDS with a cross-platform consistent name — save_model","text":"","code":"save_model(m, fp = NULL)"},{"path":"http://yongfu.name/stom/reference/save_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save CmdStanFit object as RDS with a cross-platform consistent name — save_model","text":"m CmdStanFit object returned stom::stan().","code":""},{"path":[]},{"path":"http://yongfu.name/stom/reference/simplex.html","id":null,"dir":"Reference","previous_headings":"","what":"Commonly used statistical transformation — simplex","title":"Commonly used statistical transformation — simplex","text":"Commonly used statistical transformation","code":""},{"path":"http://yongfu.name/stom/reference/simplex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Commonly used statistical transformation — simplex","text":"","code":"simplex(x)"},{"path":"http://yongfu.name/stom/reference/simplex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Commonly used statistical transformation — simplex","text":"","code":"simplex( rep(1,3) ) #> [1] 0.3333333 0.3333333 0.3333333"},{"path":"http://yongfu.name/stom/reference/softmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Numerically stable softmax function — softmax","title":"Numerically stable softmax function — softmax","text":"Numerically stable softmax function","code":""},{"path":"http://yongfu.name/stom/reference/softmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numerically stable softmax function — softmax","text":"","code":"softmax(x)"},{"path":"http://yongfu.name/stom/reference/softmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numerically stable softmax function — softmax","text":"x Numeric. vector reals map probabilities.","code":""},{"path":"http://yongfu.name/stom/reference/softmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Numerically stable softmax function — softmax","text":"","code":"softmax(1:3) #> [1] 0.09003057 0.24472847 0.66524096 softmax(1:3 + 9999999) #> [1] 0.09003057 0.24472847 0.66524096 softmax(c(12345, 67890, 99999999)) #> [1] 0 0 1"},{"path":"http://yongfu.name/stom/reference/stan.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile and sample with cmdstanr — stan","title":"Compile and sample with cmdstanr — stan","text":"Compile sample cmdstanr","code":""},{"path":"http://yongfu.name/stom/reference/stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile and sample with cmdstanr — stan","text":"","code":"stan(stan_file, data, refresh = 250, ...)"},{"path":"http://yongfu.name/stom/reference/stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile and sample with cmdstanr — stan","text":"stan_file String. Stan file path. data List. Data list. seed Integer. Random seed passed cmdstanr's $sample().","code":""},{"path":"http://yongfu.name/stom/reference/stan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile and sample with cmdstanr — stan","text":"CmdStanFit object.","code":""},{"path":"http://yongfu.name/stom/reference/stan2bin.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert stan file path to stan binary file path — stan2bin","title":"Convert stan file path to stan binary file path — stan2bin","text":"Assumes *.stan & compiled binary found directory.","code":""},{"path":"http://yongfu.name/stom/reference/stan2bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert stan file path to stan binary file path — stan2bin","text":"","code":"stan2bin(fp)"},{"path":"http://yongfu.name/stom/reference/stan2bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert stan file path to stan binary file path — stan2bin","text":"fp Path *.stan file","code":""},{"path":"http://yongfu.name/stom/reference/standardize.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize a vector to fixed mean and std — standardize","title":"Standardize a vector to fixed mean and std — standardize","text":"Standardize vector fixed mean std","code":""},{"path":"http://yongfu.name/stom/reference/standardize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize a vector to fixed mean and std — standardize","text":"","code":"standardize(x, m = 0, s = 1)"},{"path":"http://yongfu.name/stom/reference/standardize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize a vector to fixed mean and std — standardize","text":"x Numeric vector. m Mean. s Standard deviation.","code":""},{"path":"http://yongfu.name/stom/reference/stom-package.html","id":null,"dir":"Reference","previous_headings":"","what":"stom: Miscellaneous Functions for Statistical Modeling — stom-package","title":"stom: Miscellaneous Functions for Statistical Modeling — stom-package","text":"Personal package collection functions commonly used statistical modeling.","code":""},{"path":[]},{"path":"http://yongfu.name/stom/reference/stom-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"stom: Miscellaneous Functions for Statistical Modeling — stom-package","text":"Maintainer: Yongfu Liao liao961120@gmail.com (ORCID)","code":""},{"path":"http://yongfu.name/stom/reference/test_cmdstanr.html","id":null,"dir":"Reference","previous_headings":"","what":"Test cmdstanr compilation — test_cmdstanr","title":"Test cmdstanr compilation — test_cmdstanr","text":"Test cmdstanr compilation","code":""},{"path":"http://yongfu.name/stom/reference/test_cmdstanr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test cmdstanr compilation — test_cmdstanr","text":"","code":"test_cmdstanr(clean = F, draw_sample = T)"},{"path":"http://yongfu.name/stom/reference/test_cmdstanr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test cmdstanr compilation — test_cmdstanr","text":"clean Whether recompile binary found, defaults FALSE. draw_sample Whether draw samples, defaults TRUE.","code":""},{"path":"http://yongfu.name/stom/reference/to_unix_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize to Unix paths — to_unix_path","title":"Normalize to Unix paths — to_unix_path","text":"Normalize Unix paths","code":""},{"path":"http://yongfu.name/stom/reference/to_unix_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize to Unix paths — to_unix_path","text":"","code":"to_unix_path(x)  to_gitbash_path(x)  print_paths(x, win = T)"},{"path":"http://yongfu.name/stom/reference/to_unix_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize to Unix paths — to_unix_path","text":"x Character. Paths.","code":""},{"path":"http://yongfu.name/stom/reference/to_unix_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize to Unix paths — to_unix_path","text":"Character","code":""},{"path":"http://yongfu.name/stom/reference/to_unix_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize to Unix paths — to_unix_path","text":"","code":"fp = 'C:\\\\Users\\\\rd\\\\bin\\\\export_docs_pdf.R' to_unix_path(fp) #> Warning: path[1]=\"C:\\Users\\rd\\bin\\export_docs_pdf.R\": 系統找不到指定的路徑。 #> [1] \"C:/Users/rd/bin/export_docs_pdf.R\" to_gitbash_path(fp) #> Warning: path[1]=\"C:\\Users\\rd\\bin\\export_docs_pdf.R\": 系統找不到指定的路徑。 #> [1] \"/C/Users/rd/bin/export_docs_pdf.R\" get_cli_programs(F) |> print_paths() #> C:\\Users\\tomliao\\AppData\\Local\\Programs\\R\\R-4.2.3\\library\\stom\\cli\\export_docs_pdf.R #> C:\\Users\\tomliao\\AppData\\Local\\Programs\\R\\R-4.2.3\\library\\stom\\cli\\extract_column.R #> C:\\Users\\tomliao\\AppData\\Local\\Programs\\R\\R-4.2.3\\library\\stom\\cli\\pandoc_html.R #> C:\\Users\\tomliao\\AppData\\Local\\Programs\\R\\R-4.2.3\\library\\stom\\cli\\pandoc_pdf.R #> C:\\Users\\tomliao\\AppData\\Local\\Programs\\R\\R-4.2.3\\library\\stom\\cli\\pdf2img.R #> C:\\Users\\tomliao\\AppData\\Local\\Programs\\R\\R-4.2.3\\library\\stom\\cli\\pdf2png.R #> C:\\Users\\tomliao\\AppData\\Local\\Programs\\R\\R-4.2.3\\library\\stom\\cli\\pdf2svg.R"},{"path":"http://yongfu.name/stom/reference/write_tcsv.html","id":null,"dir":"Reference","previous_headings":"","what":"I/O for data frames and typed CSVs — write_tcsv","title":"I/O for data frames and typed CSVs — write_tcsv","text":"/O data frames typed CSVs","code":""},{"path":"http://yongfu.name/stom/reference/write_tcsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"I/O for data frames and typed CSVs — write_tcsv","text":"","code":"write_tcsv(dt, fout)  read_tcsv(fin)"},{"path":"http://yongfu.name/stom/reference/write_tcsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"I/O for data frames and typed CSVs — write_tcsv","text":"dt data frame written file. fout Output file path. fin Path typed CSV read . sep Character. delimiter used typed CSV. Defaults comma (,).","code":""},{"path":"http://yongfu.name/stom/reference/write_tcsv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"I/O for data frames and typed CSVs — write_tcsv","text":"","code":"(d = data.frame(     A_int = c(1L:4L, NA, NaN),     A_dbl = c(seq(0, 1, length=4), NA, NaN),     A_cpl = c((1:4) + 1i, NA, NaN),     A_lgl = c(T, F, F, T, T, NA),     A_chr = c(LETTERS[1:2], NA, \"\", '\"', '\\t'),     A_NA_int = rep(NA_integer_, 6) )) #>   A_int     A_dbl  A_cpl A_lgl A_chr A_NA_int #> 1     1 0.0000000   1+1i  TRUE     A       NA #> 2     2 0.3333333   2+1i FALSE     B       NA #> 3     3 0.6666667   3+1i FALSE  <NA>       NA #> 4     4 1.0000000   4+1i  TRUE             NA #> 5    NA        NA     NA  TRUE     \"       NA #> 6   NaN       NaN NaN+0i    NA    \\t       NA tmp = tempfile() write_tcsv(d, tmp) #> Error in loadNamespace(x): there is no package called 'readr' xfun::file_string(tmp)  # print file content #> Warning: cannot open file 'C:\\Users\\tomliao\\AppData\\Local\\Temp\\Rtmpgforfx\\file70dc7f1b450b': No such file or directory #> Error in file(con, \"r\"): cannot open the connection read_tcsv(tmp) #> Error in loadNamespace(x): there is no package called 'readr'"},{"path":"http://yongfu.name/stom/reference/xclip.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy to and from clipboard — xclip","title":"Copy to and from clipboard — xclip","text":"Copy clipboard","code":""},{"path":"http://yongfu.name/stom/reference/xclip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy to and from clipboard — xclip","text":"","code":"xclip(x)  fclip()"},{"path":"http://yongfu.name/stom/reference/xclip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy to and from clipboard — xclip","text":"x Character.","code":""},{"path":"http://yongfu.name/stom/reference/xclip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy to and from clipboard — xclip","text":"","code":"fp = 'C:\\\\Users\\\\rd\\\\bin\\\\export_docs_pdf.R' fp |> xclip()  # copy to clipboard #> Error in error_interactive(): To run write_clip() in non-interactive mode, either call write_clip() with allow_non_interactive = TRUE, or set the environment variable CLIPR_ALLOW=TRUE fclip() |> cat() #> Error in error_interactive(): To run write_clip() in non-interactive mode, either call write_clip() with allow_non_interactive = TRUE, or set the environment variable CLIPR_ALLOW=TRUE"},{"path":"http://yongfu.name/stom/reference/year.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Year/Month/Day from date string — year","title":"Extract Year/Month/Day from date string — year","text":"Extract Year/Month/Day date string","code":""},{"path":"http://yongfu.name/stom/reference/year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Year/Month/Day from date string — year","text":"","code":"year(x)  month(x)  day(x)"},{"path":"http://yongfu.name/stom/reference/year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Year/Month/Day from date string — year","text":"x Character Date vector.","code":""},{"path":"http://yongfu.name/stom/reference/year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Year/Month/Day from date string — year","text":"Numeric vector","code":""},{"path":"http://yongfu.name/stom/reference/year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Year/Month/Day from date string — year","text":"","code":"D = c(\"2021-1-1\", \"2015/9/25\") year(D) #> [1] 2021 2015 month(D) #> [1] 1 9 day(D) #> [1]  1 25"}]
